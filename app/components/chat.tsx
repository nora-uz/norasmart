"use client";
import React, { useState, useEffect, useRef } from "react";

const NORA_COLOR = "#2e2e2e";
const ICON_SIZE = 23;
const borderRadius = 22;
const panelHeight = 62;
const maxWidth = 560;
const videoMaxWidth = 314;
const GRADIENT = "linear-gradient(90deg, #eff5fe 0%, #e5e8ed 100%)";
const BABY_GRADIENT = "linear-gradient(90deg, #e39290 0%, #efb1b6 100%)";
const INPUT_BAR_HEIGHT = 68;
const PANEL_SIDE_PADDING = 15;
const BLOCK_SIDE_PADDING = 10;
const CARD_GAP = 10;

// SVG-–∏–∫–æ–Ω–∫–∏
const IconPartner = (
  <svg width="18" height="18" fill="none" viewBox="0 0 20 20">
    <circle cx="10" cy="6.5" r="3.3" stroke="#5a6573" strokeWidth="1.5"/>
    <path d="M2.8 16c.9-2.5 3.4-4.2 7.2-4.2s6.2 1.7 7.2 4.2" stroke="#5a6573" strokeWidth="1.5" strokeLinecap="round"/>
  </svg>
);
const IconContact = (
  <svg width="18" height="18" fill="none" viewBox="0 0 20 20">
    <rect x="2.8" y="3.5" width="14.4" height="11" rx="2.2" stroke="#5a6573" strokeWidth="1.5"/>
    <path d="M3.5 4l6.5 6.1c.3.2.8.2 1.1 0L17 4" stroke="#5a6573" strokeWidth="1.5"/>
  </svg>
);
const IconPolicy = (
  <svg width="16" height="16" fill="none" viewBox="0 0 20 20" style={{marginRight: 6}}>
    <path d="M4 4.5V10c0 5 7 6.5 7 6.5s7-1.5 7-6.5v-5.5–ª-7-2-7 2Z" stroke="#4d5762" strokeWidth="1.5" fill="none"/>
  </svg>
);

// –°–ø–∏—Å–æ–∫ –ø—Ä–∏—á–∏–Ω
const BENEFITS = [
  { emoji: "ü©∫", title: "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å", text: "–°–æ–≤–µ—Ç—ã –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö –±—Ä–∏—Ç–∞–Ω—Å–∫–æ–π —Å–ª—É–∂–±—ã NHS –∏ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ–¥ –≤–∞—à —Ä–µ–≥–∏–æ–Ω." },
  { emoji: "ü§ù", title: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7", text: "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏ –¥–ª—è –∑–∞–±–æ—Ç—ã –∏ –ø–æ–º–æ—â–∏ –≤ –ª—é–±–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏." },
  { emoji: "‚è∞", title: "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", text: "–°–ª–µ–¥–∏–º, —á—Ç–æ–±—ã –≤—ã –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–±—ã–ª–∏ ‚Äî –∞–Ω–∞–ª–∏–∑—ã, –≤–∏—Ç–∞–º–∏–Ω—ã, –≤–∏–∑–∏—Ç—ã." },
  { emoji: "üîí", title: "–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å", text: "–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —É –≤–∞—Å ‚Äî –Ω–∏–∫–∞–∫–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–º." },
  { emoji: "‚ö°Ô∏è", title: "–ë—ã—Å—Ç—Ä—ã–µ —Ä–µ—à–µ–Ω–∏—è", text: "–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å—Ä–∞–∑—É, –∫–æ–≥–¥–∞ —ç—Ç–æ –Ω—É–∂–Ω–æ." },
];

// –û—Ç–∑—ã–≤—ã
const REVIEWS = [
  { name: "–ê–Ω–Ω–∞", badge: "2 –º–µ—Å –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–¢–æ–∫—Å–∏–∫–æ–∑", text: "Nora Plus –ø–æ–¥—Å–∫–∞–∑–∞–ª–∞, –∫–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —É—Ç—Ä–µ–Ω–Ω–µ–π —Ç–æ—à–Ω–æ—Ç–æ–π. –í—Å—ë —Å—Ç–∞–ª–æ –ø—Ä–æ—â–µ." },
  { name: "–ï–ª–µ–Ω–∞", badge: "4 –º–µ—Å –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–°–ª–∞–±–æ—Å—Ç—å", text: "–¢–µ–ø–µ—Ä—å —è –∑–Ω–∞—é, –∫–∞–∫–∏–µ –≤–∏—Ç–∞–º–∏–Ω—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∏ –∫–∞–∫ –æ—Ç–¥—ã—Ö–∞—Ç—å." },
  { name: "–ú–∞—Ä–∏—è", badge: "7 –º–µ—Å –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–ë–µ—Å—Å–æ–Ω–Ω–∏—Ü–∞", text: "–ë–ª–∞–≥–æ–¥–∞—Ä—è —Å–æ–≤–µ—Ç–∞–º Nora Plus —è —Å—Ç–∞–ª–∞ –ª—É—á—à–µ —Å–ø–∞—Ç—å –∏ —á—É–≤—Å—Ç–≤—É—é —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ." },
];

// –ë–ª–æ–∫ HowItWorks
const EXAMPLES = [
  { q: "–ú–æ–∂–Ω–æ –ª–∏ –ø–∏—Ç—å –∫–æ—Ñ–µ –≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏?", a: "‚òï –î–∞, –Ω–æ –Ω–µ –±–æ–ª—å—à–µ 1-2 —á–∞—à–µ–∫ –≤ –¥–µ–Ω—å." },
  { q: "–ß–∞—Å—Ç–æ –±–æ–ª–∏—Ç —Å–ø–∏–Ω–∞, —á—Ç–æ –¥–µ–ª–∞—Ç—å?", a: "ü¶µ –ù–æ—Å–∏—Ç–µ —É–¥–æ–±–Ω—É—é –æ–±—É–≤—å –∏ —á–∞—â–µ –æ—Ç–¥—ã—Ö–∞–π—Ç–µ –ª—ë–∂–∞ –Ω–∞ –±–æ–∫—É." },
  { q: "–ö–∞–∫ –ø–∏—Ç–∞—Ç—å—Å—è?", a: "üçé –ï—à—å—Ç–µ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ, —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∂–µ–ª–µ–∑–∞ –∏ –∫–∞–ª—å—Ü–∏—è!" },
  { q: "–ú–æ–∂–Ω–æ –ª–∏ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º?", a: "üèÉ –î–∞! –ü–æ–¥–æ–π–¥—É—Ç –ø—Ä–æ–≥—É–ª–∫–∏, –ø–ª–∞–≤–∞–Ω–∏–µ –∏ –π–æ–≥–∞ –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö." },
  { q: "–ü–æ—á–µ–º—É —è –±—ã—Å—Ç—Ä–æ —É—Å—Ç–∞—é?", a: "üí§ –û—Ä–≥–∞–Ω–∏–∑–º —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ ‚Äî –æ—Ç–¥—ã—Ö–∞–π—Ç–µ –±–æ–ª—å—à–µ, –≤–∞–∂–Ω–æ —Å–æ–±–ª—é–¥–∞—Ç—å —Å–æ–Ω." },
];

const bubbleStyle = (align = "right") => ({
  alignSelf: align === "right" ? ("flex-end" as const) : ("flex-start" as const),
  background: "#fff",
  borderRadius: 19,
  padding: align === "right" ? "12px 16px" : "12px 16px",
  marginBottom: 16,
  maxWidth: 360,
  textAlign: "left" as const,
  boxShadow: "0 1px 8px rgba(200,180,200,0.1)",
});

const NoraHowItWorksBlock = () => {
  const [step, setStep] = useState(0);
  const [phase, setPhase] = useState("typeQ");
  const [qText, setQText] = useState("");
  const [aText, setAText] = useState("");

  useEffect(() => {
    if (phase === "typeQ") {
      setQText("");
      let i = 0;
      const int = setInterval(() => {
        setQText(EXAMPLES[step].q.slice(0, i + 1));
        i++;
        if (i > EXAMPLES[step].q.length) { clearInterval(int); setTimeout(() => setPhase("typeA"), 350); }
      }, 40);
      return () => clearInterval(int);
    }
    if (phase === "typeA") {
      setAText("");
      let i = 0;
      const int = setInterval(() => {
        setAText(EXAMPLES[step].a.slice(0, i + 1));
        i++;
        if (i > EXAMPLES[step].a.length) {
          clearInterval(int);
          setTimeout(() => setPhase("next"), 6000);
        }
      }, 25);
      return () => clearInterval(int);
    }
    if (phase === "next") {
      const timeout = setTimeout(() => {
        setStep((step + 1) % EXAMPLES.length);
        setPhase("typeQ");
      }, 600);
      return () => clearTimeout(timeout);
    }
  }, [phase, step]);

  return (
    <div style={{
      width: `calc(100% - ${BLOCK_SIDE_PADDING * 2}px)`,
      margin: "0 auto 38px auto",
      background: GRADIENT,
      borderRadius: borderRadius,
      boxShadow: "0 6px 20px rgba(150,175,205,0.1)",
      padding: `22px ${BLOCK_SIDE_PADDING}px 20px ${BLOCK_SIDE_PADDING}px`,
      fontFamily: "'Manrope', Arial, sans-serif"
    }}>
      <div style={{ fontWeight: 700, fontSize: 20, color: NORA_COLOR, textAlign: "center" as const }}>
        –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Nora?
      </div>
      <div style={{ marginTop: 25, display: "flex", flexDirection: "column" }}>
        {qText && <div style={bubbleStyle("right")}>{qText}</div>}
        {aText && <div style={bubbleStyle("left")}>{aText}</div>}
      </div>
      <div style={{ textAlign: "center" as const, fontSize: 13, color: "#7b8590", marginTop: 10 }}>
        –ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å ‚Äî –ù–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∏—Ç!
      </div>
    </div>
  );
};

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
const Chat = () => {
  const [showWelcome, setShowWelcome] = useState(true);
  return (
    <div style={{ fontFamily: "'Manrope',sans-serif", background: "#f8fdff" }}>
      {/* –ü–∞–Ω–µ–ª—å */}
      <div style={{
        maxWidth,
        margin: "20px auto",
        background: GRADIENT,
        borderRadius: borderRadius,
        height: 62,
        display: "flex",
        alignItems: "center",
        justifyContent: "space-between",
        padding: "5px 15px"
      }}>
        <div style={{ flex: 1 }}>
          <div style={{ fontWeight: 800, fontSize: 19 }}>Nora Plus</div>
          <div style={{ fontSize: 13, color: "#555" }}>–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –±—É–¥—É—â–∏—Ö –º–∞–º</div>
        </div>
        <div style={{ gap: 8, display: "flex" }}>
          <img src="https://cdn-icons-png.flaticon.com/512/535/535285.png" style={{ width: ICON_SIZE, height: ICON_SIZE }} />
          <img src="https://cdn-icons-png.flaticon.com/512/1946/1946547.png" style={{ width: ICON_SIZE, height: ICON_SIZE }} />
          <img src="https://cdn-icons-png.flaticon.com/512/1345/1345823.png" style={{ width: ICON_SIZE, height: ICON_SIZE }} />
        </div>
      </div>

      {/* Welcome Screen */}
      {showWelcome && (
        <div style={{ textAlign: "center" }}>
          <video
            src="/nora.mp4"
            autoPlay
            muted
            loop
            playsInline
            preload="auto"
            style={{ width: "100%", maxWidth: videoMaxWidth, borderRadius: 22 }}
          />
          <h2 style={{ color: NORA_COLOR, fontSize: 22, fontWeight: 700, marginTop: 16 }}>–ñ–¥—ë—Ç–µ –º–∞–ª—ã—à–∞? –Ø –ø–æ–º–æ–≥—É!</h2>
          <p style={{
            color: NORA_COLOR, fontSize: 15, lineHeight: 1.7, maxWidth: 400, margin: "10px auto"
          }}>
            –Ø –ø–æ–º–æ–≥–∞—é –±—É–¥—É—â–∏–º –º–∞–º–∞–º: –æ—Ç–≤–µ—á–∞—é –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–æ–º–∏–Ω–∞—é –æ –¥–µ–ª–∞—Ö, —Å–ª–µ–∂—É –∑–∞ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ–º –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é!
          </p>
          <button
            onClick={() => setShowWelcome(false)}
            style={{
              background: BABY_GRADIENT,
              border: "none",
              borderRadius: borderRadius,
              color: "#fff",
              fontWeight: 700,
              fontSize: 17,
              padding: "15px 30px",
              marginTop: 25,
              cursor: "pointer"
            }}
          >
            –ù–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è
          </button>
        </div>
      )}

      {/* –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ù–æ—Ä–∞ */}
      <NoraHowItWorksBlock />
      {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
      <div style={{
        width: `calc(100% - ${BLOCK_SIDE_PADDING * 2}px)`,
        background: GRADIENT,
        borderRadius: borderRadius,
        margin: "0 auto 38px auto",
        boxShadow: "0 6px 20px rgba(150,175,205,0.1)",
        padding: `22px ${BLOCK_SIDE_PADDING}px 20px`
      }}>
        <h3 style={{ fontWeight: 700, textAlign: "center", fontSize: 20, color: NORA_COLOR }}>–ü–æ—á–µ–º—É Nora Plus?</h3>
        {BENEFITS.map((b, i) => (
          <div key={i} style={{ background: "#fff", borderRadius: 18, padding: "15px", marginTop: 10 }}>
            <strong>{b.emoji} {b.title}</strong>
            <div style={{ fontSize: 13 }}>{b.text}</div>
          </div>
        ))}
      </div>
      {/* –û—Ç–∑—ã–≤—ã */}
      <div style={{
        width: `calc(100% - ${BLOCK_SIDE_PADDING * 2}px)`,
        background: GRADIENT,
        borderRadius: borderRadius,
        margin: "0 auto 38px auto",
        boxShadow: "0 6px 20px rgba(150,175,205,0.1)",
        padding: `22px ${BLOCK_SIDE_PADDING}px 20px`
      }}>
        <h3 style={{ fontWeight: 700, textAlign: "center", fontSize: 20, color: NORA_COLOR }}>–û—Ç–∑—ã–≤—ã –±—É–¥—É—â–∏—Ö –º–∞–º</h3>
        {REVIEWS.map((r, i) => (
          <div key={i} style={{ background: "#fff", borderRadius: 18, padding: "15px", marginTop: 10 }}>
            <div><strong>{r.name}</strong> <span style={{ color: "#1681f5" }}>{r.badge}</span></div>
            <div style={{ fontSize: 13, marginTop: 5 }}>{r.text}</div>
          </div>
        ))}
      </div>

      {/* –§—É—Ç–µ—Ä */}
      <div style={{
        width: `calc(100% - 40px)`,
        maxWidth,
        margin: "0 auto 20px auto",
        background: GRADIENT,
        borderRadius: 22,
        boxShadow: "0 -4px 14px rgba(155,175,205,0.06)",
        padding: 20
      }}>
        <div style={{ fontSize: 12, textAlign: "center", color: "#263540", fontWeight: 600 }}>
          –¢–∞—à–∫–µ–Ω—Ç, –Æ–Ω—É—Å–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω, –º–∞—Å—Å–∏–≤ –ö–∞—à–≥–∞—Ä 26
        </div>
        <div style={{ display: "flex", justifyContent: "center", gap: 10, marginTop: 10 }}>
          <span>{IconPartner}</span><span>{IconContact}</span><span>{IconPolicy}</span>
        </div>
      </div>
    </div>
  );
};

export default Chat;
