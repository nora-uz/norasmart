"use client";
import React, { useState, useEffect, useRef } from "react";

// --- Emoji-–∏–∫–æ–Ω–∫–∏ –¥–ª—è –ø–∞–Ω–µ–ª–∏, —Ñ—É—Ç–µ—Ä–∞ ---
const ICONS = {
  telegram: "https://cdn-icons-png.flaticon.com/512/1946/1946547.png",
  trash: "https://cdn-icons-png.flaticon.com/512/1345/1345823.png",
  share: "https://cdn-icons-png.flaticon.com/512/535/535285.png",
  arrowRight: (
    <svg width="22" height="22" viewBox="0 0 22 22" fill="none">
      <path d="M6 11H16M16 11L12 7M16 11L12 15"
        stroke="#fff" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
    </svg>
  ),
};
const ICON_SIZE = 23;

const NORA_COLOR = "#2e2e2e";
const borderRadius = 22;
const panelHeight = 62;
const maxWidth = 560;
const videoMaxWidth = 314;
const GRADIENT = "linear-gradient(90deg, #eff5fe 0%, #e5e8ed 100%)";
const BABY_GRADIENT = "linear-gradient(90deg, #e39290 0%, #efb1b6 100%)";
const INPUT_BAR_HEIGHT = 68;
const PANEL_SIDE_PADDING = 15;
const BLOCK_SIDE_PADDING = 10;
const CARD_GAP = 10;

// --- –ü–∞–Ω–µ–ª—å –≤–≤–µ—Ä—Ö—É –Ω–∞ –≤—Å–µ—Ö —ç–∫—Ä–∞–Ω–∞—Ö —Å –∫–Ω–æ–ø–∫–∞–º–∏ ---
const HeaderPanel = ({ onClearChat }: { onClearChat?: () => void }) => (
  <div style={{
    width: `calc(100% - ${PANEL_SIDE_PADDING * 2}px)`,
    maxWidth,
    minHeight: panelHeight,
    background: GRADIENT,
    color: NORA_COLOR,
    margin: "20px auto 0 auto",
    display: "flex",
    alignItems: "center",
    justifyContent: "space-between",
    borderRadius: borderRadius,
    paddingLeft: PANEL_SIDE_PADDING, paddingRight: PANEL_SIDE_PADDING, paddingTop: 5, paddingBottom: 5,
    boxSizing: "border-box", zIndex: 1,
    fontFamily: "'Manrope', Arial, Helvetica, sans-serif"
  }}>
    <div style={{display: "flex", flexDirection: "column", alignItems: "flex-start", flex: 1, paddingLeft: 5}}>
      <span style={{
        fontWeight: 800, fontSize: "19px", lineHeight: 1.06, whiteSpace: "nowrap", marginBottom: 7
      }}>
        Nora Plus
      </span>
      <span style={{
        fontWeight: 400, fontSize: "13px", color: "#565656", lineHeight: 1.04, whiteSpace: "nowrap"
      }}>
        –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –±—É–¥—É—â–∏—Ö –º–∞–º
      </span>
    </div>
    <div style={{ display: "flex", alignItems: "center", gap: 8, marginLeft: 16 }}>
      <button style={{
        background: "transparent", border: "none", cursor: "pointer",
        width: 38, height: 38, borderRadius: 19,
        display: "flex", alignItems: "center", justifyContent: "center"
      }} onClick={() => window?.navigator?.share?.({ title: "Nora Plus", url: window.location.href })}>
        <img src={ICONS.share} alt="Share"
          style={{ width: ICON_SIZE, height: ICON_SIZE, filter: "invert(13%) sepia(4%) saturate(271%) hue-rotate(175deg) brightness(92%) contrast(93%)" }} />
      </button>
      <button style={{
        background: "transparent", border: "none", cursor: "pointer",
        width: 38, height: 38, borderRadius: 19,
        display: "flex", alignItems: "center", justifyContent: "center"
      }} onClick={() => window.open("https://t.me/norasmart", "_blank")}>
        <img src={ICONS.telegram} alt="Telegram"
          style={{ width: ICON_SIZE, height: ICON_SIZE, filter: "invert(13%) sepia(4%) saturate(271%) hue-rotate(175deg) brightness(92%) contrast(93%)" }} />
      </button>
      <button style={{
        background: "transparent", border: "none", cursor: "pointer",
        width: 38, height: 38, borderRadius: 19,
        display: "flex", alignItems: "center", justifyContent: "center"
      }} onClick={() => onClearChat && onClearChat()}>
        <img src={ICONS.trash} alt="Trash"
          style={{ width: ICON_SIZE, height: ICON_SIZE, filter: "invert(13%) sepia(4%) saturate(271%) hue-rotate(175deg) brightness(92%) contrast(93%)" }} />
      </button>
    </div>
  </div>
);

// --- Footer ONLY –Ω–∞ welcome: —Å –∫–Ω–æ–ø–∫–∞–º–∏! ---
const IconPartner = (
  <svg width="18" height="18" fill="none" viewBox="0 0 20 20">
    <circle cx="10" cy="6.5" r="3.3" stroke="#5a6573" strokeWidth="1.5"/>
    <path d="M2.8 16c.9-2.5 3.4-4.2 7.2-4.2s6.2 1.7 7.2 4.2" stroke="#5a6573" strokeWidth="1.5" strokeLinecap="round"/>
  </svg>
);
const IconContact = (
  <svg width="18" height="18" fill="none" viewBox="0 0 20 20">
    <rect x="2.8" y="3.5" width="14.4" height="11" rx="2.2" stroke="#5a6573" strokeWidth="1.5"/>
    <path d="M3.5 4l6.5 6.1c.3.2.8.2 1.1 0L17 4" stroke="#5a6573" strokeWidth="1.5"/>
  </svg>
);
const IconPolicy = (
  <svg width="16" height="16" fill="none" viewBox="0 0 20 20" style={{marginRight: 6}}>
    <path d="M4 4.5V10c0 5 7 6.5 7 6.5s7-1.5 7-6.5v-5.5l-7-2-7 2Z" stroke="#4d5762" strokeWidth="1.5" fill="none"/>
  </svg>
);
const Footer = () => (
  <div
    style={{
      width: `calc(100% - 40px)`,
      maxWidth,
      margin: "0 auto",
      background: GRADIENT,
      borderRadius: "22px",
      boxShadow: "0 -4px 14px 0 rgba(155,175,205,0.06)",
      boxSizing: "border-box",
      fontFamily: "'Manrope', Arial, Helvetica, sans-serif",
      paddingLeft: 20,
      paddingRight: 20,
      paddingTop: 22,
      paddingBottom: 22,
      display: "flex",
      flexDirection: "column",
      gap: 18,
      alignItems: "center"
    }}
  >
    <div style={{
      fontSize: 12,
      color: "#263540",
      fontWeight: 600,
      textAlign: "center",
      width: "100%"
    }}>
      –¢–∞—à–∫–µ–Ω—Ç, –Æ–Ω—É—Å–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω, –º–∞—Å—Å–∏–≤ –ö–∞—à–≥–∞—Ä 26
    </div>
    <div style={{
      display: "flex",
      gap: 11,
      width: "100%",
      justifyContent: "center"
    }}>
      <a href="#" style={{
        background: "#fff",
        width: "63%",
        borderRadius: 13,
        color: "#495062",
        fontWeight: 400,
        fontSize: 14,
        padding: "9px 0",
        textDecoration: "none",
        textAlign: "center",
        border: "1px solid #e1e9f5",
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        gap: 7,
        marginRight: 5
      }}>{IconPartner} –°—Ç–∞—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º</a>
      <a href="#" style={{
        background: "#fff",
        width: "37%",
        borderRadius: 13,
        color: "#495062",
        fontWeight: 400,
        fontSize: 14,
        padding: "9px 0",
        textDecoration: "none",
        textAlign: "center",
        border: "1px solid #e1e9f5",
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        gap: 7
      }}>{IconContact} –ö–æ–Ω—Ç–∞–∫—Ç—ã</a>
    </div>
    <a href="#" style={{
      background: "#fff",
      padding: "7px 0",
      width: "100%",
      borderRadius: 14,
      color: "#556",
      fontWeight: 400,
      fontSize: 14,
      textDecoration: "none",
      border: "1px solid #e1e9f5",
      textAlign: "center",
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      gap: 7
    }}>{IconPolicy} –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>
    <div style={{
      marginTop: 8,
      fontSize: 12,
      color: "#8a97a0",
      textAlign: "center",
      width: "100%"
    }}>
      ¬© {new Date().getFullYear()} Nora Plus ‚Äî –∑–∞–±–æ—Ç–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –±—É–¥—É—â–∏—Ö –º–∞–º
    </div>
  </div>
);

// --- –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞, –æ—Ç–∑—ã–≤—ã ---
const BENEFITS = [
  { emoji: "ü©∫", title: "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å", text: "–°–æ–≤–µ—Ç—ã –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö –±—Ä–∏—Ç–∞–Ω—Å–∫–æ–π —Å–ª—É–∂–±—ã NHS –∏ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ–¥ –≤–∞—à —Ä–µ–≥–∏–æ–Ω." },
  { emoji: "ü§ù", title: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7", text: "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏ –¥–ª—è –∑–∞–±–æ—Ç—ã –∏ –ø–æ–º–æ—â–∏ –≤ –ª—é–±–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏." },
  { emoji: "‚è∞", title: "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –≤–∞–∂–Ω—ã—Ö –¥–µ–ª–∞—Ö", text: "–°–ª–µ–¥–∏–º, —á—Ç–æ–±—ã –≤—ã –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–±—ã–ª–∏ ‚Äî –∞–Ω–∞–ª–∏–∑—ã, –≤–∏—Ç–∞–º–∏–Ω—ã, –≤–∏–∑–∏—Ç—ã." },
  { emoji: "üîí", title: "–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å", text: "–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —É –≤–∞—Å ‚Äî –Ω–∏–∫–∞–∫–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–º." },
  { emoji: "‚ö°Ô∏è", title: "–ë—ã—Å—Ç—Ä—ã–µ —Ä–µ—à–µ–Ω–∏—è", text: "–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å—Ä–∞–∑—É, –∫–æ–≥–¥–∞ —ç—Ç–æ –Ω—É–∂–Ω–æ." },
];
const WhyNoraBlock = () => (
  <div style={{
    width: `calc(100% - ${BLOCK_SIDE_PADDING * 2}px)`,
    maxWidth,
    margin: "0 auto 38px auto",
    background: GRADIENT,
    borderRadius: borderRadius,
    boxShadow: "0 6px 20px 0 rgba(150, 175, 205, 0.10)",
    boxSizing: "border-box",
    padding: 0,
    fontFamily: "'Manrope', Arial, Helvetica, sans-serif"
  }}>
    <div style={{ padding: `21px 0 20px 0` }}>
      <div style={{
        fontWeight: 700,
        fontSize: "20px",
        color: NORA_COLOR,
        marginBottom: 20,
        textAlign: "center"
      }}>
        –ü–æ—á–µ–º—É Nora Plus?
      </div>
      <div style={{
        display: "flex",
        flexDirection: "column",
        gap: CARD_GAP,
        padding: `0 ${BLOCK_SIDE_PADDING}px`
      }}>
        {BENEFITS.map(({ emoji, title, text }, idx) => (
          <div
            key={idx}
            style={{
              position: "relative",
              background: "#fff",
              borderRadius: 18,
              boxShadow: "0 2px 18px 0 rgba(150,180,220,0.07)",
              padding: "19px 15px 19px 15px",
              overflow: "hidden",
              minHeight: 56,
              textAlign: "left"
            }}
          >
            <span
              style={{
                position: "absolute",
                right: 12,
                top: 14,
                fontSize: 62,
                opacity: 0.14,
                pointerEvents: "none",
                userSelect: "none",
                lineHeight: 1,
                zIndex: 0,
              }}
              aria-hidden="true"
            >
              {emoji}
            </span>
            <div style={{ position: "relative", zIndex: 1 }}>
              <div style={{ fontWeight: 700, fontSize: 16, color: NORA_COLOR, marginBottom: 7, textAlign: "left" }}>
                {title}
              </div>
              <div style={{ fontSize: 13, color: "#3a3a3a", lineHeight: "1.64", textAlign: "left" }}>
                {text}
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
);

const REVIEWS = [
  { name: "–ê–Ω–Ω–∞", badge: "2 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–¢–æ–∫—Å–∏–∫–æ–∑", text: "Nora Plus –ø–æ–¥—Å–∫–∞–∑–∞–ª–∞, –∫–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —É—Ç—Ä–µ–Ω–Ω–µ–π —Ç–æ—à–Ω–æ—Ç–æ–π. –ë–ª–∞–≥–æ–¥–∞—Ä—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º –ø–æ –ø–∏—Ç–∞–Ω–∏—é –∏ —Ä–µ–∂–∏–º—É –¥–Ω—è —Å–∏–º–ø—Ç–æ–º—ã —Å—Ç–∞–ª–∏ –≥–æ—Ä–∞–∑–¥–æ –ª–µ–≥—á–µ." },
  { name: "–î–∏–ª–Ω–æ–∑–∞", badge: "3 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–¢–æ—à–Ω–æ—Ç–∞", text: "–°–æ–≤–µ—Ç—ã Nora Plus –ø–æ–º–æ–≥–ª–∏ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —Ç–æ—à–Ω–æ—Ç–æ–π –∏ –ª–µ–≥—á–µ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å. –í—Å–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç –≤–æ–≤—Ä–µ–º—è." },
  { name: "–ï–ª–µ–Ω–∞", badge: "4 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–°–ª–∞–±–æ—Å—Ç—å –∏ —É—Å—Ç–∞–ª–æ—Å—Ç—å", text: "–¢–µ–ø–µ—Ä—å —è –∑–Ω–∞—é, –∫–∞–∫–∏–µ –≤–∏—Ç–∞–º–∏–Ω—ã –Ω—É–∂–Ω–æ –ø–∏—Ç—å, —Å–∫–æ–ª—å–∫–æ –æ—Ç–¥—ã—Ö–∞—Ç—å –∏ –∫–∞–∫ –≤—ã—Å—Ç—Ä–æ–∏—Ç—å –¥–µ–Ω—å. –ß—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ª—É—á—à–µ!" },
  { name: "–®–∞—Ö–Ω–æ–∑–∞", badge: "5 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–ü–ª–æ—Ö–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", text: "–ë–ª–∞–≥–æ–¥–∞—Ä—è –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–º —Å–ª–æ–≤–∞–º –∏ —Å–æ–≤–µ—Ç–∞–º Nora Plus –º–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∑–∞–º–µ—Ç–Ω–æ —É–ª—É—á—à–∏–ª–æ—Å—å." },
  { name: "–ò—Ä–∏–Ω–∞", badge: "5 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–¢—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å", text: "–°–æ–≤–µ—Ç—ã Nora Plus –ø–æ–º–æ–≥–ª–∏ –º–Ω–µ –±–æ–ª—å—à–µ –æ—Ç–¥—ã—Ö–∞—Ç—å, –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–µ–±–µ –∏ –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –ª–∏—à–Ω–∏—Ö –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏–π –∑–∞ –º–∞–ª—ã—à–∞." },
  { name: "–ú–∞—Ä–∏—è", badge: "7 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–ë–µ—Å—Å–æ–Ω–Ω–∏—Ü–∞", text: "–ë–ª–∞–≥–æ–¥–∞—Ä—è —Å–æ–≤–µ—Ç–∞–º Nora Plus —è —Å—Ç–∞–ª–∞ –ª—É—á—à–µ —Å–ø–∞—Ç—å –∏ —Å–ø–æ–∫–æ–π–Ω–æ –∂–¥—É –ø–æ—è–≤–ª–µ–Ω–∏—è –º–∞–ª—ã—à–∞." },
];
const ReviewBlock = () => (
  <div style={{
    width: `calc(100% - ${BLOCK_SIDE_PADDING * 2}px)`,
    maxWidth,
    margin: "0 auto 38px auto",
    background: GRADIENT,
    borderRadius: borderRadius,
    boxShadow: "0 6px 20px 0 rgba(150, 175, 205, 0.10)",
    boxSizing: "border-box",
    padding: 0,
    fontFamily: "'Manrope', Arial, Helvetica, sans-serif"
  }}>
    <div style={{ padding: "21px 0 20px 0" }}>
      <div style={{
        fontWeight: 700,
        fontSize: "20px",
        color: NORA_COLOR,
        marginBottom: 20,
        textAlign: "center"
      }}>
        –û—Ç–∑—ã–≤—ã –±—É–¥—É—â–∏—Ö –º–∞–º
      </div>
      <div style={{
        display: "flex",
        flexDirection: "column",
        gap: CARD_GAP,
        padding: `0 ${BLOCK_SIDE_PADDING}px`
      }}>
        {REVIEWS.map(({ name, badge, problem, text }, idx) => (
          <div
            key={idx}
            style={{
              background: "#fff",
              borderRadius: 18,
              boxShadow: "0 2px 18px 0 rgba(150,180,220,0.07)",
              padding: "19px 15px 19px 15px",
              overflow: "hidden",
              textAlign: "left"
            }}
          >
            <div style={{ position: "relative", zIndex: 1 }}>
              <div style={{ display: "flex", alignItems: "center", gap: 8, marginBottom: 7 }}>
                <span style={{ fontWeight: 700, fontSize: 15, color: "#222" }}>{name}</span>
                <span style={{
                  fontWeight: 500, fontSize: 13, color: "#1681f5",
                  padding: "4px 9px", borderRadius: 12, background: "#f3f7fe", whiteSpace: "nowrap"
                }}>{badge}</span>
              </div>
              <div style={{ fontWeight: 500, fontSize: 13, color: "#acb5bd", marginBottom: 9 }}>{problem}</div>
              <div style={{ fontSize: 13, color: "#3a3a3a", lineHeight: "1.64" }}>{text}</div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
);

// --- –°—Ç–∏–ª–∏ –¥–ª—è –±–ª–æ–∫–∞ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ù–æ—Ä–∞ ---
const bubbleStyle = (align: "left" | "right") => ({
  position: 'relative' as const,
  alignSelf: align === "right" ? 'flex-end' as const : 'flex-start' as const,
  background: "#fff",
  color: NORA_COLOR,
  borderTopLeftRadius: 19,
  borderTopRightRadius: 19,
  borderBottomLeftRadius: align === "left" ? 2 : 19,
  borderBottomRightRadius: align === "right" ? 2 : 19,
  fontSize: 15,
  padding: align === "right" ? "15px 20px" : "20px 21px",
  marginBottom: 16,
  maxWidth: 370,
  minWidth: 120,
  textAlign: "left" as const,
  fontWeight: align === "right" ? 500 : 400,
  lineHeight: align === "right" ? "1.55" : "1.7",
  boxShadow: "0 1px 8px 0 rgba(200,180,200,0.1)",
  display: "block",
  whiteSpace: "pre-line" as const,
});

const NoraHowItWorksBlock = () => {
  const DIALOGS = [
    { q: "–ú–æ–∂–Ω–æ –ª–∏ –ø–∏—Ç—å –∫–æ—Ñ–µ –≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏?", a: "‚òï –ö–æ–Ω–µ—á–Ω–æ! –¢–æ–ª—å–∫–æ –Ω–µ –±–æ–ª—å—à–µ 1-2 —á–∞—à–µ–∫ –≤ –¥–µ–Ω—å ‚Äî –∏ –ª—É—á—à–µ –±–µ–∑ —Å–∞—Ö–∞—Ä–∞, —á—Ç–æ–±—ã –Ω–µ –ø–æ–≤—ã—Å–∏—Ç—å –¥–∞–≤–ª–µ–Ω–∏–µ." },
    { q: "–Ø –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø–µ—Ä–µ–∂–∏–≤–∞—é –∑–∞ –º–∞–ª—ã—à–∞...", a: "ü§ó –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ! –ü–æ–∑–≤–æ–ª—å—Ç–µ —Å–µ–±–µ –æ—Ç–¥—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ–∏ —ç–º–æ—Ü–∏–∏." },
    { q: "–ß–∞—Å—Ç–æ –±–æ–ª–∏—Ç —Å–ø–∏–Ω–∞ –∏ –Ω–æ–≥–∏, —á—Ç–æ –¥–µ–ª–∞—Ç—å?", a: "ü¶µ –û—á–µ–Ω—å —á–∞—Å—Ç–∞—è –∂–∞–ª–æ–±–∞. –ù–æ—Å–∏—Ç–µ —É–¥–æ–±–Ω—É—é –æ–±—É–≤—å, –ø—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ –ª–µ–≥–∫—É—é –∑–∞—Ä—è–¥–∫—É, –æ—Ç–¥—ã—Ö–∞–π—Ç–µ —á–∞—â–µ –ª—ë–∂–∞ –Ω–∞ –±–æ–∫—É." },
    { q: "–ü–ª–æ—Ö–æ —Å–ø–ª—é –ø–æ –Ω–æ—á–∞–º, –ø—Ä–æ—Å—ã–ø–∞—é—Å—å —á–∞—Å—Ç–æ.", a: "üò¥ –õ—ë–≥–∫–∏–π –ø–µ—Ä–µ–∫—É—Å –ø–µ—Ä–µ–¥ —Å–Ω–æ–º, –ø—Ä–æ—Ö–ª–∞–¥–Ω–∞—è –ø—Ä–æ–≤–µ—Ç—Ä–µ–Ω–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞ –∏ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–π —Ä–µ–∂–∏–º ‚Äî –≤—Å—ë —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Å –±–µ—Å—Å–æ–Ω–Ω–∏—Ü–µ–π." },
    { q: "–ù–µ –∑–∞–±—ã—Ç—å –±—ã –≤–∏—Ç–∞–º–∏–Ω—ã –∏ –∞–Ω–∞–ª–∏–∑—ã!", a: "üíä –Ø –ø–æ—Å—Ç–∞–≤–ª—é –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è, —Å—Ñ–æ—Ä–º–∏—Ä—É—é –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≤–∏–∑–∏—Ç–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—é push –∑–∞ 2 –¥–Ω—è!" },
    { q: "–ú–æ–∂–Ω–æ –ª–∏ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º?", a: "üèÉ –°–ø–æ—Ä—Ç ‚Äî –æ—Ç–ª–∏—á–Ω–æ! –ù–æ –≤—ã–±–∏—Ä–∞–π—Ç–µ –ø–ª–∞–≤–∞–Ω–∏–µ, –π–æ–≥—É, –ø—Ä–æ–≥—É–ª–∫–∏. –ì–ª–∞–≤–Ω–æ–µ ‚Äî –Ω–∏–∫–∞–∫–∏—Ö —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä—É–∑–æ–∫." },
    { q: "–£ –º–µ–Ω—è –∏–Ω–æ–≥–¥–∞ —Ç—è–Ω–µ—Ç –∂–∏–≤–æ—Ç...", a: "üë©‚Äç‚öïÔ∏è –ù–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–∞—è –±–æ–ª—å –¥–æ–ø—É—Å—Ç–∏–º–∞, –Ω–æ –µ—Å–ª–∏ —É—Å–∏–ª–∏–≤–∞–µ—Ç—Å—è –∏–ª–∏ –ø–æ—è–≤–ª—è—é—Ç—Å—è –Ω–æ–≤—ã–µ —Å–∏–º–ø—Ç–æ–º—ã ‚Äî –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–æ–æ–±—â–∏—Ç–µ –≤—Ä–∞—á—É!" },
    { q: "–ß—Ç–æ –≤–∑—è—Ç—å —Å —Å–æ–±–æ–π –Ω–∞ –ø–µ—Ä–≤—ã–π –ø—Ä–∏–µ–º –∫ –≤—Ä–∞—á—É?", a: "üìÑ –ü–∞—Å–ø–æ—Ä—Ç, —Å—Ç—Ä–∞—Ö–æ–≤–æ–π –ø–æ–ª–∏—Å, —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å), —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–Ω–∏–º–∞–µ–º—ã—Ö –≤–∏—Ç–∞–º–∏–Ω–æ–≤ –∏–ª–∏ –ª–µ–∫–∞—Ä—Å—Ç–≤." }
  ];
  const [step, setStep] = useState(0);
  const [phase, setPhase] = useState<"typeQ" | "typeA" | "waitNext">("typeQ");
  const [qText, setQText] = useState("");
  const [aText, setAText] = useState("");

  useEffect(() => {
    if (phase === "typeQ") {
      setQText("");
      let i = 0;
      const interval = setInterval(() => {
        setQText(DIALOGS[step].q.slice(0, i + 1));
        i++;
        if (i > DIALOGS[step].q.length) {
          clearInterval(interval);
          setTimeout(() => setPhase("typeA"), 300);
        }
      }, 30);
      return () => clearInterval(interval);
    }
    if (phase === "typeA") {
      setAText("");
      let i = 0;
      const interval = setInterval(() => {
        setAText(DIALOGS[step].a.slice(0, i + 1));
        i++;
        if (i > DIALOGS[step].a.length) {
          clearInterval(interval);
          setTimeout(() => setPhase("waitNext"), 7000);
        }
      }, 14);
      return () => clearInterval(interval);
    }
    if (phase === "waitNext" && step < DIALOGS.length - 1) {
      const timer = setTimeout(() => {
        setQText("");
        setAText("");
        setPhase("typeQ");
        setStep((s) => s + 1);
      }, 200);
      return () => clearTimeout(timer);
    }
  }, [phase, step]);

  return (
    <div style={{
      width: `calc(100% - ${BLOCK_SIDE_PADDING * 2}px)`,
      maxWidth,
      height: 390,
      minHeight: 390,
      background: GRADIENT,
      borderRadius: borderRadius,
      boxShadow: "0 6px 20px 0 rgba(150,175,205,0.11)",
      padding: `22px ${BLOCK_SIDE_PADDING}px`,
      fontFamily: "'Manrope', Arial, Helvetica, sans-serif",
      display: "flex",
      flexDirection: "column",
      justifyContent: "flex-start"
    }}>
      <div style={{
        fontWeight: 700,
        fontSize: 20,
        color: NORA_COLOR,
        textAlign: "center"
      }}>
        –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Nora?
      </div>
      <div style={{ height: 28 }} />
      <div style={{
        width: "100%",
        height: "255px",
        display: "flex",
        flexDirection: "column",
        alignItems: "stretch",
        justifyContent: "flex-start"
      }}>
        {qText && (
          <div style={bubbleStyle("right")}>
            {qText}<span style={{ opacity: 0.19 }}>{phase === "typeQ" && "|"}</span>
          </div>
        )}
        {aText && (
          <div style={bubbleStyle("left")}>
            {aText}<span style={{ opacity: 0.19 }}>{phase === "typeA" && "|"}</span>
          </div>
        )}
      </div>
      <div style={{ fontSize: 13, color: "#6e7c85", textAlign: "center", marginTop: 8 }}>
        –ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å ‚Äî –ù–æ—Ä–∞ –Ω–∞–π–¥—ë—Ç –æ—Ç–≤–µ—Ç!
      </div>
    </div>
  );
};

const Chat = () => {
  const [showWelcome, setShowWelcome] = useState(true);
  const [message, setMessage] = useState("");
  const [chatHistory, setChatHistory] = useState<{ text: string, sender: "user" | "bot" }[]>([]);
  const messagesEndRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    if (messagesEndRef.current) {
      messagesEndRef.current.scrollIntoView({ behavior: "smooth" });
    }
  }, [chatHistory]);

  const handleSendMessage = () => {
    if (!message.trim()) return;
    setChatHistory([...chatHistory, { text: message.trim(), sender: "user" }]);
    setTimeout(() => {
      setChatHistory(prev => [...prev, { text: "Nora –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å!", sender: "bot" }]);
      setMessage("");
    }, 1200);
  };

  const handleClearChat = () => {
    setChatHistory([]);
    setMessage("");
  };

  return (
    <div style={{ background: "#f8fdff", minHeight: "100vh" }}>
      <HeaderPanel onClearChat={handleClearChat} />
      {showWelcome ? (
        <>
          <div style={{ height: 20 }} />
          <div style={{ height: 20 }} />
          <div style={{
            width: "100%",
            maxWidth: maxWidth,
            margin: "0 auto",
            display: "flex",
            justifyContent: "center",
            alignItems: "center"
          }}>
            <video src="/nora.mp4"
              style={{
                width: "100%",
                maxWidth: videoMaxWidth,
                display: "block",
                borderRadius: 24
              }}
              autoPlay
              playsInline
              muted
              loop
              preload="auto"
            />
          </div>
          <div style={{ height: 20 }} />
          <div style={{ height: 20 }} />
          <div style={{
            width: `calc(100% - ${BLOCK_SIDE_PADDING * 2}px)`,
            maxWidth,
            textAlign: "center",
            margin: "0 auto"
          }}>
            <div style={{
              fontWeight: 700,
              fontSize: "22px",
              color: NORA_COLOR,
              marginBottom: 14
            }}>–ñ–¥—ë—Ç–µ –º–∞–ª—ã—à–∞? –Ø –ø–æ–º–æ–≥—É!</div>
            <div style={{
              fontWeight: 400,
              fontSize: "15px",
              margin: "0 auto 0 auto",
              maxWidth: 400,
              padding: "0 18px",
              lineHeight: 1.75,
              color: NORA_COLOR,
              display: "inline-block"
            }}>
              –Ø –ø–æ–º–æ–≥–∞—é –±—É–¥—É—â–∏–º –º–∞–º–∞–º: –æ—Ç–≤–µ—á–∞—é –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–æ–º–∏–Ω–∞—é –æ –≤–∞–∂–Ω—ã—Ö –¥–µ–ª–∞—Ö, —Å–ª–µ–∂—É –∑–∞ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ–º.
            </div>
            <div style={{ height: 40 }} />
            <div style={{ display: "flex", justifyContent: "center", width: "100%" }}>
              <div style={{ width: "100%", textAlign: "center" }}>
                <button
                  style={{
                    width: "100%", maxWidth: 290,
                    background: BABY_GRADIENT,
                    color: "#fff",
                    border: "none",
                    borderRadius: borderRadius,
                    fontWeight: 700,
                    fontSize: "17px",
                    padding: "15px 0",
                    margin: "0 auto",
                    cursor: "pointer",
                    display: "flex", alignItems: "center", justifyContent: "center",
                    boxShadow: "0 2px 18px 0 rgba(200, 128, 140, 0.09)"
                  }}
                  onClick={() => setShowWelcome(false)}
                >
                  –ù–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è
                  <span style={{ marginLeft: 8, display: "flex", alignItems: "center" }}>{ICONS.arrowRight}</span>
                </button>
                <div style={{ height: 13 }} />
                <div style={{ fontSize: 13, color: "#7c8792" }}>
                  –ü–æ–ø—Ä–æ–±—É–π—Ç–µ ‚Äî —ç—Ç–æ –±—ã—Å—Ç—Ä–æ –∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ
                </div>
              </div>
            </div>
            <div style={{ height: 40 }} />
            <NoraHowItWorksBlock />
            <WhyNoraBlock />
            <ReviewBlock />
            <Footer />
          </div>
        </>
      ) : (
        <>
          <div style={{
            width: "100%",
            maxWidth: maxWidth,
            margin: "0 auto",
            padding: "24px 0 80px 0",
            minHeight: "60vh"
          }}>
            {chatHistory.map((msg, idx) => (
              <div
                key={idx}
                style={{
                  textAlign: msg.sender === "user" ? "right" : "left",
                  margin: "10px 20px"
                }}
              >
                <span style={{
                  background: msg.sender === "user" ? "#fff" : "#f7fafd",
                  padding: 12,
                  borderRadius: 16,
                  fontSize: 16
                }}>{msg.text}</span>
              </div>
            ))}
            <div ref={messagesEndRef} />
          </div>
          <div style={{
            width: "calc(100% - 40px)",
            margin: "0 20px",
            display: "flex",
            alignItems: "center",
            boxSizing: "border-box",
            maxWidth: maxWidth,
            height: INPUT_BAR_HEIGHT,
            position: "fixed",
            left: 0,
            bottom: 25,
            background: "transparent",
            borderRadius: borderRadius,
            zIndex: 20,
            boxShadow: "none"
          }}>
            <input
              type="text"
              value={message}
              onChange={e => setMessage(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
              style={{
                flex: 1,
                height: 48,
                fontSize: 16,
                borderRadius: borderRadius,
                borderWidth: 1,
                borderStyle: "solid",
                borderColor: "#e5e8ed",
                padding: "0 18px",
                background: "#fff",
                color: NORA_COLOR,
                boxSizing: "border-box",
                marginRight: 8,
                transition: "border 0.22s"
              }}
              onKeyDown={e => { if (e.key === 'Enter') handleSendMessage(); }}
            />
            <button
              style={{
                width: 48,
                height: 48,
                background: BABY_GRADIENT,
                color: "#fff",
                border: "none",
                borderRadius: borderRadius,
                fontWeight: 700,
                fontSize: 17,
                cursor: "pointer",
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                boxShadow: "0 2px 14px 0 rgba(155,175,205,0.12)"
              }}
              onClick={handleSendMessage}
            >
              {ICONS.arrowRight}
            </button>
          </div>
        </>
      )}
    </div>
  );
};

export default Chat;
