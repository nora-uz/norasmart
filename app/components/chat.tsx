"use client";
import React, { useState, useEffect, useRef } from "react";

// ... –ø—Ä–µ–∂–Ω–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã (NORA_COLOR, ICONS, COLORS, BORDER, –∏–∫–æ–Ω–∫–∏, BENEFITS, REVIEWS) –∑–¥–µ—Å—å –Ω–µ –ø—Ä–∏–≤–æ–∂—É —Ä–∞–¥–∏ —á–∏—Å—Ç–æ—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–∞—à–µ–π –≤–µ—Ä—Å–∏–∏!

// –ò—Ö –≤—ã —É–∂–µ –≤–∏–¥–µ–ª–∏ –≤—ã—à–µ ‚Äî –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ!

// –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è –∏–∫–æ–Ω–∫–∞ (–∑–∞–º–æ–∫) –¥–ª—è ‚Äú–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏‚Äù
const IconLock = (
  <svg width="16" height="16" viewBox="0 0 20 20" fill="none"><rect x="5" y="9" width="10" height="7" rx="2" stroke="#8a97a0" strokeWidth="1.6"/><path d="M7.8 9V7a2.2 2.2 0 1 1 4.4 0v2" stroke="#8a97a0" strokeWidth="1.6"/></svg>
);

// --- –ì–æ—Ç–æ–≤—ã–µ —Ç–µ–º—ã (—Å–æ–≤–µ—Ç—É–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã)
const TOPICS = [
  {
    icon: "ü§¢",
    title: "–¢–æ—à–Ω–æ—Ç–∞ –∏ —Ç–æ–∫—Å–∏–∫–æ–∑",
    desc: "–ß—Ç–æ —Ä–µ–∞–ª—å–Ω–æ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞ —Ä–∞–Ω–Ω–∏—Ö —Å—Ä–æ–∫–∞—Ö?"
  },
  {
    icon: "üçè",
    title: "–ü–∏—Ç–∞–Ω–∏–µ –ø—Ä–∏ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏",
    desc: "–ö–∞–∫–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ–ª–µ–∑–Ω—ã, –∞ —á–µ–≥–æ –∏–∑–±–µ–≥–∞—Ç—å?"
  },
  {
    icon: "ü§∏‚Äç‚ôÄÔ∏è",
    title: "–§–∏—Ç–Ω–µ—Å –∏ –¥–≤–∏–∂–µ–Ω–∏–µ",
    desc: "–ú–æ–∂–Ω–æ –ª–∏ –±–µ—Ä–µ–º–µ–Ω–Ω—ã–º –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º?"
  },
  {
    icon: "üòî",
    title: "–≠–º–æ—Ü–∏–∏ –∏ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å",
    desc: "–ö–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å–æ —Å—Ç—Ä–∞—Ö–∞–º–∏ –∏ —Å—Ç—Ä–µ—Å—Å–æ–º?"
  },
  {
    icon: "üíä",
    title: "–í–∏—Ç–∞–º–∏–Ω—ã",
    desc: "–ß—Ç–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å, –∞ —á—Ç–æ –Ω–µ—Ç?"
  },
  {
    icon: "‚òïÔ∏è",
    title: "–ö–æ—Ñ–µ –∏ –Ω–∞–ø–∏—Ç–∫–∏",
    desc: "–ú–æ–∂–Ω–æ –ª–∏ –ø–∏—Ç—å –∫–æ—Ñ–µ –∏ —á–∞–π?"
  },
];

const TopicsBlock = ({ onTopicClick }) => (
  <div
    style={{
      margin: "0 auto 24px auto",
      maxWidth: 560,
      width: "100%",
      display: "flex",
      flexWrap: "wrap",
      gap: "16px",
      justifyContent: "center"
    }}
  >
    {TOPICS.map((topic, idx) => (
      <button key={idx}
        style={{
          flex: "1 1 44%",
          minWidth: 162,
          maxWidth: 250,
          background: "#fff",
          border: "none",
          borderRadius: "18px",
          boxShadow: "0 2px 12px 0 rgba(150,180,220,0.07)",
          padding: "14px 14px 14px 14px",
          display: "flex",
          flexDirection: "column",
          alignItems: "flex-start",
          cursor: "pointer",
          transition: "box-shadow .13s",
          fontFamily: "'Manrope', Arial, Helvetica, sans-serif"
        }}
        onClick={() => onTopicClick(`${topic.title}. ${topic.desc}`)}
      >
        <div style={{fontSize: 24, marginBottom: 6}}>{topic.icon}</div>
        <div style={{fontWeight: 700, fontSize: 15, color: "#2e2e2e", marginBottom: 2}}>{topic.title}</div>
        <div style={{fontSize: 13, color: "#6c7689"}}>{topic.desc}</div>
      </button>
    ))}
  </div>
);

// --- –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ (—Ñ—ç–π–∫–æ–≤–∞—è –¥–µ–º–æ, –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –Ω—É–∂–Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API/localStorage)
const OLD_CHATS = [
  { id: 1, title: "1-–π —Ç—Ä–∏–º–µ—Å—Ç—Ä ‚Äî –∞–Ω–∞–ª–∏–∑—ã", sub: "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è–º" },
  { id: 2, title: "–ü–∏—Ç–∞–Ω–∏–µ –∏ –≤–∏—Ç–∞–º–∏–Ω—ã", sub: "–ß—Ç–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å?" }
];

const ChatsHistoryBlock = ({onSelect}) => (
  <div style={{
    margin: "0 auto 18px auto",
    maxWidth: 560,
    width: "100%",
    padding: "0 6px"
  }}>
    <div style={{ fontSize: 14, color: "#818ca0", fontWeight: 600, marginBottom: 9, marginLeft: 5 }}>–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞</div>
    <div style={{
      display: "flex",
      flexDirection: "column",
      gap: 10
    }}>
      {OLD_CHATS.map(chat => (
        <button
          key={chat.id}
          onClick={() => onSelect(chat)}
          style={{
            background: "#fff",
            border: "1px solid #e5e9f8",
            borderRadius: 15,
            padding: "13px 15px",
            display: "flex",
            alignItems: "flex-start",
            gap: 13,
            textAlign: "left",
            cursor: "pointer",
            boxShadow: "0 2px 7px 0 rgba(100,120,180,0.05)"
          }}>
          <span style={{ fontSize: 19, marginTop: 2 }}>üí¨</span>
          <div>
            <div style={{ fontWeight: 600, color: "#27324d", fontSize: 15 }}>{chat.title}</div>
            <div style={{ fontSize: 13, color: "#7582a3" }}>{chat.sub}</div>
          </div>
        </button>
      ))}
    </div>
  </div>
);

// --- –ù–æ–≤—ã–π –±–ª–æ–∫ "–ß—Ç–æ —É–º–µ–µ—Ç Nora?" --- –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞

// --- Footer (–∑–∞–º–æ–∫ –¥–ª—è –ø–æ–ª–∏—Ç–∏–∫–∏)
const Footer = () => (
  <div
    style={{
      width: `calc(100% - 40px)`,
      maxWidth,
      margin: "0 auto",
      background: GRADIENT,
      borderRadius: "22px",
      boxShadow: "0 -4px 14px 0 rgba(155,175,205,0.06)",
      boxSizing: "border-box",
      fontFamily: "'Manrope', Arial, Helvetica, sans-serif",
      paddingLeft: 20,
      paddingRight: 20,
      paddingTop: 22,
      paddingBottom: 22,
      display: "flex",
      flexDirection: "column",
      gap: 18,
      alignItems: "center"
    }}
  >
    <div style={{
      fontSize: 12,
      color: "#263540",
      fontWeight: 600,
      textAlign: "center",
      width: "100%"
    }}>
      –¢–∞—à–∫–µ–Ω—Ç, –Æ–Ω—É—Å–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω, –º–∞—Å—Å–∏–≤ –ö–∞—à–≥–∞—Ä 26
    </div>
    <div style={{
      display: "flex",
      gap: 11,
      width: "100%",
      justifyContent: "center"
    }}>
      <a href="#" style={{
        background: "#fff",
        width: "63%",
        borderRadius: 13,
        color: "#495062",
        fontWeight: 400,
        fontSize: 14,
        padding: "9px 0",
        textDecoration: "none",
        textAlign: "center",
        border: "1px solid #e1e9f5",
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        gap: 7,
        marginRight: 5
      }}>{IconPartner} –°—Ç–∞—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º</a>
      <a href="#" style={{
        background: "#fff",
        width: "37%",
        borderRadius: 13,
        color: "#495062",
        fontWeight: 400,
        fontSize: 14,
        padding: "9px 0",
        textDecoration: "none",
        textAlign: "center",
        border: "1px solid #e1e9f5",
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        gap: 7
      }}>{IconContact} –ö–æ–Ω—Ç–∞–∫—Ç—ã</a>
    </div>
    <a href="#" style={{
      background: "#fff",
      padding: "7px 0",
      width: "100%",
      borderRadius: 14,
      color: "#556",
      fontWeight: 400,
      fontSize: 14,
      textDecoration: "none",
      border: "1px solid #e1e9f5",
      textAlign: "center",
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      gap: 7
    }}>{IconLock} –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>
    <div style={{
      marginTop: 8,
      fontSize: 12,
      color: "#8a97a0",
      textAlign: "center",
      width: "100%"
    }}>
      ¬© {new Date().getFullYear()} Nora Plus ‚Äî –∑–∞–±–æ—Ç–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –±—É–¥—É—â–∏—Ö –º–∞–º
    </div>
  </div>
);

// --- –û—Ç—Å—Ç—É–ø –ø–æ—Å–ª–µ —Ñ—É—Ç–µ—Ä–∞
const FooterGap = () => <div style={{height: 20}} />;

// ... splitBotTextTwoBlocks –∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ —Ç–æ—á–Ω–æ—Å—Ç–∏ –∫–∞–∫ –≤ –≤–∞—à–∏—Ö –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤–µ—Ä—Å–∏—è—Ö

const Chat = () => {
  // ... –ø—Ä–µ–∂–Ω–∏–π –Ω–∞–±–æ—Ä useState/useEffect ‚Äî –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ –ø–æ–∫–∞–∑–∞–Ω–æ –≤—ã—à–µ –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏

  // --- –î–ª—è –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ (–≤—ã–±–æ—Ä –∏—Å—Ç–æ—Ä–∏–∏ —Å–∏–º—É–ª–∏—Ä—É–µ—Ç—Å—è)
  const [selectedHistory, setSelectedHistory] = useState(null);

  // --- –î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ç–µ–º ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —á–∞—Ç –ø—É—Å—Ç –∏–ª–∏ –Ω–æ–≤—ã–π, –∏–Ω–∞—á–µ –∏—Å—á–µ–∑–∞—é—Ç
  const [showTopics, setShowTopics] = useState(true);

  // –ü—Ä–∏ –≤—ã–±–æ—Ä–µ —Ç–µ–º—ã ‚Äî —á–∞—Ç —Å—Ä–∞–∑—É –ø–æ–ª—É—á–∞–µ—Ç —ç—Ç–æ—Ç ‚Äú–≤–æ–ø—Ä–æ—Å‚Äù
  const handleTopicClick = (topic) => {
    setMessage(topic);
    setShowTopics(false);
  };

  // –ü—Ä–∏ –≤—ã–±–æ—Ä–µ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ ‚Äî ‚Äú–∏–º–∏—Ç–∏—Ä—É–µ–º –≤–æ–∑–≤—Ä–∞—Ç –∫ –∏—Å—Ç–æ—Ä–∏–∏‚Äù (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–º–µ–Ω–∏ –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É –∏—Å—Ç–æ—Ä–∏–∏)
  const handleChatHistory = (chat) => {
    setSelectedHistory(chat.id);
    setChatHistory([{text: chat.title + '. ' + chat.sub, sender: "user"}]);
    setShowTopics(false);
  };

  // --- –õ–æ–≥–∏–∫–∞ "—Å–∫—Ä—ã—Ç–∏—è" —Ç–µ–º –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ
  useEffect(() => {
    if (chatHistory.length > 0) setShowTopics(false);
  }, [chatHistory.length]);

  // ... –æ—Å—Ç–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ ‚Äî sendMessageToGPT, handleSendMessage/handleShare –∏ —Ç.–¥.

  if (showWelcome) {
    // ... –ø—Ä–µ–∂–Ω–∏–π welcome-—ç–∫—Ä–∞–Ω ...
    // –û—Ñ–æ—Ä–º–ª–µ–Ω —Ñ–∏—Ä–º–µ–Ω–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏, –∫–∞–∫ –≤ –≤–∞—à–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–º –∫–æ–¥–µ
    // description –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è: ‚Äú–∏ —Å–ª–µ–∂—É –∑–∞ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ–º.‚Äù
    // WhatNoraDoesBlock (–≤–º–µ—Å—Ç–æ WhyNoraBlock)
    // –û—Å—Ç–∞–ª—å–Ω–æ–π –±–ª–æ–∫-–≤–µ—Ä—Å—Ç–∫–∞ –Ω–µ –∫–æ–ø–∏—Ä—É—é –∑–¥–µ—Å—å —Ä–∞–¥–∏ –∫–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç–∏
  }

  // --- –ß–ê–¢-–≠–ö–†–ê–ù ---
  return (
    <div style={{
      background: "#f8fdff",
      width: "100vw",
      minHeight: "100vh",
      display: "flex",
      flexDirection: "column"
    }}>
      {/* –ü–∞–Ω–µ–ª—å –∫–∞–∫ –æ–±—ã—á–Ω–æ */}
      {/* ... */}
      {/* –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–æ–≤ */}
      {showTopics && <ChatsHistoryBlock onSelect={handleChatHistory} />}
      {/* –¢–µ–º—ã –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è */}
      {showTopics && <TopicsBlock onTopicClick={handleTopicClick}/>}
      {/* –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π */}
      <div style={{ flex: 1, display: "flex", flexDirection: "column", justifyContent: "flex-end" }}>
        <div style={{ width: "100%", maxWidth: maxWidth, margin: "0 auto", padding: "80px 0 110px 0" }}>
          {chatHistory.map((msg, idx) => (
            <div
              key={idx}
              style={{
                textAlign: msg.sender === "user" ? "right" : "left",
                margin: "8px 20px"
              }}
            >
              {msg.sender === "user"
                ? <span style={{
                    background: GRADIENT,
                    padding: 10,
                    borderRadius: 16,
                    fontSize: 16
                  }}>{msg.text}</span>
                : splitBotTextTwoBlocks(msg.text).map((part, sIdx) => (
                  part.text && (
                    <div
                      key={sIdx}
                      style={{
                        background: "#f7fafd",
                        borderRadius: 12,
                        padding: "10px 15px",
                        marginBottom: sIdx === 0 ? 18 : 30,
                        color: NORA_COLOR,
                        fontSize: 16,
                        lineHeight: 1.7,
                        fontWeight: part.bold ? "bold" : "normal"
                      }}
                    >
                      {part.text}
                    </div>
                  )
                ))
              }
            </div>
          ))}
          {botProgress &&
            splitBotTextTwoBlocks(botProgress).map((part, sIdx) => (
              part.text && (
                <div
                  key={sIdx}
                  style={{
                    background: "#f7fafd",
                    borderRadius: 12,
                    padding: "10px 15px",
                    margin: "0 20px 10px 20px",
                    color: NORA_COLOR,
                    fontSize: 16,
                    lineHeight: 1.7,
                    fontWeight: part.bold ? "bold" : "normal"
                  }}
                >
                  {part.text}
                </div>
              )
            ))
          }
          <div ref={messagesEndRef} />
        </div>
      </div>
      {/* –ü–æ–ª–µ input –∏ –∫–Ω–æ–ø–∫–∞ */}
      <div style={{
        width: "calc(100% - 40px)",
        margin: "0 20px",
        display: "flex",
        alignItems: "center",
        boxSizing: "border-box",
        maxWidth: maxWidth,
        height: INPUT_BAR_HEIGHT,
        position: "fixed",
        left: 0,
        bottom: 25,
        background: "transparent",
        borderRadius: borderRadius,
        zIndex: 20,
        boxShadow: "none"
      }}>
        <input
          type="text"
          value={message}
          onFocus={() => setFocused(true)}
          onBlur={() => setFocused(false)}
          onChange={e => setMessage(e.target.value)}
          placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
          style={{
            flex: 1,
            height: 48,
            fontSize: "16px",
            borderRadius: borderRadius,
            borderWidth: focused ? 2 : 1,
            borderStyle: "solid",
            borderColor: focused ? "transparent" : "#e5e8ed",
            borderImage: focused ? GRADIENT + " 1" : undefined,
            padding: "0 18px",
            background: "#fff",
            color: NORA_COLOR,
            boxSizing: "border-box",
            marginRight: 8,
            transition: "border 0.22s"
          }}
          onKeyDown={e => { if (e.key === 'Enter') handleSendMessage(); }}
          disabled={loading || !!botProgress}
        />
        <button
          style={{
            width: 48,
            height: 48,
            background: BABY_GRADIENT,
            color: "#fff",
            border: "none",
            borderRadius: borderRadius,
            fontWeight: 700,
            fontSize: "17px",
            cursor: (loading || !!botProgress) ? "not-allowed" : "pointer",
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            boxShadow: "0 2px 14px 0 rgba(155,175,205,0.12)"
          }}
          onClick={handleSendMessage}
          disabled={loading || !!botProgress}
        >
          <span style={{ display: "flex", alignItems: "center", justifyContent: "center" }}>
            {ICONS.arrowRight}
          </span>
        </button>
      </div>
    </div>
  );
};

export default Chat;
