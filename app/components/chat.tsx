"use client";
import React, { useState, useEffect, useRef } from "react";

const NORA_COLOR = "#2e2e2e";
const ICON_SIZE = 23;
const borderRadius = 22;
const panelHeight = 62;
const maxWidth = 560;
const videoMaxWidth = 314;
const GRADIENT = "linear-gradient(90deg, #eff5fe 0%, #e5e8ed 100%)";
const BABY_GRADIENT = "linear-gradient(90deg, #e39290 0%, #efb1b6 100%)";
const INPUT_BAR_HEIGHT = 68;
const PANEL_SIDE_PADDING = 15;
const BLOCK_SIDE_PADDING = 10;
const CARD_GAP = 10;

const THREAD_KEY = "nora_thread_id";

// --- –û—Å–Ω–æ–≤–Ω—ã–µ –∏–∫–æ–Ω–∫–∏ ---
const ICONS = {
  telegram: "https://cdn-icons-png.flaticon.com/512/1946/1946547.png",
  trash: "https://cdn-icons-png.flaticon.com/512/1345/1345823.png",
  share: "https://cdn-icons-png.flaticon.com/512/535/535285.png",
  arrowRight: (
    <svg width="22" height="22" viewBox="0 0 22 22" fill="none">
      <path d="M6 11H16M16 11L12 7M16 11L12 15"
        stroke="#fff" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
    </svg>
  ),
};

// --- –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ ---
const BENEFITS = [
  { emoji: "ü©∫", title: "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å", text: "–°–æ–≤–µ—Ç—ã –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ NHS –∏ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ–¥ –≤–∞—à —Ä–µ–≥–∏–æ–Ω." },
  { emoji: "ü§ù", title: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7", text: "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å." },
  { emoji: "‚è∞", title: "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", text: "–°–ª–µ–¥–∏–º, —á—Ç–æ–±—ã –≤—ã –Ω–µ –∑–∞–±—ã–ª–∏ –æ –ø—Ä–∏—ë–º–∞—Ö, –∞–Ω–∞–ª–∏–∑–∞—Ö, –≤–∏—Ç–∞–º–∏–Ω–∞—Ö." },
  { emoji: "üîí", title: "–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å", text: "–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —É –≤–∞—Å ‚Äî –±–µ–∑ –ø–µ—Ä–µ–¥–∞—á–∏ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–º." },
  { emoji: "‚ö°Ô∏è", title: "–ë—ã—Å—Ç—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã", text: "–ù–æ—Ä–∞ –ø–æ–¥—Å–∫–∞–∂–µ—Ç —Å—Ä–∞–∑—É, –∫–æ–≥–¥–∞ —ç—Ç–æ –Ω—É–∂–Ω–æ." },
];

// --- –û—Ç–∑—ã–≤—ã ---
const REVIEWS = [
  { name: "–ê–Ω–Ω–∞", badge: "2 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–¢–æ–∫—Å–∏–∫–æ–∑", text: "Nora Plus –ø–æ–º–æ–≥–ª–∞ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —Ç–æ—à–Ω–æ—Ç–æ–π –∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–∏—Ç–∞–Ω–∏–µ." },
  { name: "–ï–ª–µ–Ω–∞", badge: "5 –º–µ—Å—è—Ü", problem: "–°–ª–∞–±–æ—Å—Ç—å", text: "–°–æ–≤–µ—Ç—ã –ø–æ–º–æ–≥–ª–∏ –≤—ã—Å—Ç—Ä–æ–∏—Ç—å —Ä–µ–∂–∏–º –∏ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è —ç–Ω–µ—Ä–≥–∏—á–Ω–µ–µ." },
  { name: "–ò—Ä–∏–Ω–∞", badge: "6 –º–µ—Å—è—Ü", problem: "–¢—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å", text: "–¢–µ–ø–µ—Ä—å —Å–ø–æ–∫–æ–π–Ω–∞ –∏ —É–≤–µ—Ä–µ–Ω–∞, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ù–æ—Ä—ã –ø–æ–º–æ–≥–∞–µ—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å." },
  { name: "–ú–∞–ª–∏–∫–∞", badge: "8 –º–µ—Å—è—Ü", problem: "–ë–µ—Å—Å–æ–Ω–Ω–∏—Ü–∞", text: "–°–æ–Ω –Ω–∞–ª–∞–¥–∏–ª—Å—è, —Å–æ–≤–µ—Ç—ã –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –¥—ã—Ö–∞–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –æ—Ç–ª–∏—á–Ω–æ." },
];

// --- –ú–∏–∫—Ä–æ-—Ñ—É–Ω–∫—Ü–∏—è –±–æ—Ç–∞ ---
function splitBotTextTwoBlocks(text) {
  if (!text) return [];
  let cleaned = text.replace(/[*_]/g, "");
  const match = cleaned.match(/^([^.!?]+[.!?])\s*(.*)$/s);
  if (match) {
    return [{ text: match[1].trim(), bold: true }, { text: match[2].trim(), bold: false }];
  } else {
    return [{ text: cleaned, bold: true }];
  }
}

// --- –ë–ª–æ–∫ ¬´–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ù–æ—Ä–∞¬ª ---
const HowItWorks = () => {
  const EXAMPLES = [
    { q: "–ß–∞—Å—Ç–æ –æ—Ç–µ–∫–∞—é—Ç –Ω–æ–≥–∏ –∫ –≤–µ—á–µ—Ä—É.", a: "ü¶µ –û—Ç–¥—ã—Ö–∞–π—Ç–µ —Å –ø—Ä–∏–ø–æ–¥–Ω—è—Ç—ã–º–∏ –Ω–æ–≥–∞–º–∏ –∏ –ø–µ–π—Ç–µ –≤–æ–¥—É. –ï—Å–ª–∏ —Å–∏–ª—å–Ω–æ –±–µ—Å–ø–æ–∫–æ–∏—Ç ‚Äî –æ–±—Å—É–¥–∏–º!" },
    { q: "–ë–æ–ª–∏—Ç —Å–ø–∏–Ω–∞ –∏ –ø–æ—è—Å–Ω–∏—Ü–∞.", a: "üíÜ –≠—Ç–æ –∏–∑-–∑–∞ —Ä–æ—Å—Ç–∞ –∂–∏–≤–æ—Ç–∞. –ü–æ–º–æ–≥—É—Ç –ª—ë–≥–∫–∏–µ —Ä–∞—Å—Ç—è–∂–∫–∏ –∏ –æ—Ç–¥—ã—Ö —Å –ø–æ–¥—É—à–∫–æ–π –º–µ–∂–¥—É –Ω–æ–≥." },
    { q: "–ü–ª–æ—Ö–æ —Å–ø–ª—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–Ω–∏.", a: "üò¥ –í–µ—á–µ—Ä–Ω—è—è –ø—Ä–æ–≥—É–ª–∫–∞ –∏ —á–∞—à–∫–∞ —Ç—ë–ø–ª–æ–≥–æ –º–æ–ª–æ–∫–∞ –ø–æ–º–æ–≥—É—Ç —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è." },
    { q: "–°—Ç–∞–ª —Å—É—Ö–æ–π –∂–∏–≤–æ—Ç –∏ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∑—É–¥.", a: "üß¥ –£–≤–ª–∞–∂–Ω—è–π—Ç–µ –º–∞—Å–ª–æ–º –∏–ª–∏ –∫—Ä–µ–º–æ–º —É—Ç—Ä–æ–º –∏ –≤–µ—á–µ—Ä–æ–º ‚Äî –∫–æ–∂–∞ –±—É–¥–µ—Ç –º—è–≥—á–µ." },
    { q: "–ß—É–≤—Å—Ç–≤—É—é —Ç—Ä–µ–≤–æ–≥—É –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã.", a: "ü§ó –¢–∞–∫–æ–µ –±—ã–≤–∞–µ—Ç. –ü–æ–¥—ã—à–∏–º –≥–ª—É–±–∂–µ –∏ –Ω–∞–π–¥—ë–º —Å–ø–æ—Å–æ–± —Å–Ω—è—Ç—å –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ." },
    { q: "–ü–æ—Å–ª–µ –µ–¥—ã –∏–∑–∂–æ–≥–∞.", a: "üî• –ï—à—å—Ç–µ –ø–æ–Ω–µ–º–Ω–æ–≥—É –∏ –Ω–µ –ª–æ–∂–∏—Ç–µ—Å—å —Å—Ä–∞–∑—É. –¢—ë–ø–ª—ã–π –π–æ–≥—É—Ä—Ç –∏–ª–∏ –º–æ–ª–æ–∫–æ —Å–Ω–∏–∂–∞—é—Ç –∂–∂–µ–Ω–∏–µ." }
  ];

  const [step, setStep] = useState(0);
  const [phase, setPhase] = useState("q");
  const [q, setQ] = useState("");
  const [a, setA] = useState("");

  useEffect(() => {
    let t;
    if (phase === "q") {
      setQ(""); let i = 0;
      t = setInterval(() => {
        setQ(EXAMPLES[step].q.slice(0, i + 1));
        i++;
        if (i > EXAMPLES[step].q.length) { clearInterval(t); setTimeout(() => setPhase("a"), 350); }
      }, 35);
    } else if (phase === "a") {
      setA(""); let i = 0;
      t = setInterval(() => {
        setA(EXAMPLES[step].a.slice(0, i + 1));
        i++;
        if (i > EXAMPLES[step].a.length) { clearInterval(t); setTimeout(() => setPhase("next"), 7000); }
      }, 17);
    } else if (phase === "next") {
      t = setTimeout(() => { setStep((s) => (s + 1) % EXAMPLES.length); setPhase("q"); }, 300);
    }
    return () => clearInterval(t);
  }, [phase, step]);

  const bubbleUser = (text) => (
    <div style={{
      alignSelf: "flex-end",
      background: "#fff",
      borderRadius: "19px 19px 4px 19px",
      padding: "20px 22px",
      marginBottom: 26,
      maxWidth: 400,
      textAlign: "right",
      fontSize: 15.5,
      lineHeight: 1.7,
      boxShadow: "0 1px 8px rgba(200,180,200,0.12)"
    }}>{text}</div>
  );

  const bubbleBot = (text) => (
    <div style={{
      alignSelf: "flex-start",
      background: "#f7fafd",
      borderRadius: "19px 19px 19px 4px",
      padding: "22px 24px",
      marginBottom: 26,
      maxWidth: 420,
      textAlign: "left",
      fontSize: 15.5,
      lineHeight: 1.7,
      boxShadow: "0 1px 8px rgba(200,180,200,0.12)"
    }}>{text}</div>
  );

  return (
    <div style={{
      width: `calc(100% - ${BLOCK_SIDE_PADDING * 2}px)`,
      maxWidth,
      margin: "0 auto 30px auto",
      background: GRADIENT,
      borderRadius: 22,
      boxShadow: "0 6px 20px rgba(150,175,205,0.1)",
      padding: "10px 0 20px 0",
      fontFamily: "'Manrope', Arial, Helvetica, sans-serif"
    }}>
      <div style={{ display: "flex", flexDirection: "column", padding: `0 ${BLOCK_SIDE_PADDING}px` }}>
        {q && bubbleUser(q)}
        {a && bubbleBot(a)}
      </div>
      <div style={{
        fontSize: 13,
        color: "#7b8590",
        textAlign: "center",
        marginTop: 8
      }}>
        –ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å ‚Äî –ù–æ—Ä–∞ –Ω–∞–π–¥—ë—Ç –æ—Ç–≤–µ—Ç!
      </div>
    </div>
  );
};

// --- –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Chat ---
const Chat = () => {
  const [showWelcome, setShowWelcome] = useState(true);

  return (
    <div style={{ background: "#f8fdff", minHeight: "100vh", fontFamily: "'Manrope', Arial" }}>
      {showWelcome ? (
        <div style={{ padding: 20 }}>
          <h2 style={{ textAlign: "center", color: NORA_COLOR }}>Nora Plus</h2>
          <p style={{ textAlign: "center", maxWidth: 400, margin: "0 auto", color: NORA_COLOR }}>
            –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –±—É–¥—É—â–∏—Ö –º–∞–º: —Å–æ–≤–µ—Ç—ã, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º NHS.
          </p>
          <HowItWorks />
          <div style={{ textAlign: "center" }}>
            <button
              onClick={() => setShowWelcome(false)}
              style={{
                background: BABY_GRADIENT,
                border: "none",
                borderRadius: 22,
                color: "#fff",
                fontSize: 17,
                fontWeight: 700,
                padding: "15px 40px",
                cursor: "pointer"
              }}
            >
              –ù–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è üöÄ
            </button>
          </div>
        </div>
      ) : (
        <div style={{ textAlign: "center", paddingTop: 100, color: NORA_COLOR }}>
          –ß–∞—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è‚Ä¶
        </div>
      )}
    </div>
  );
};

export default Chat;
