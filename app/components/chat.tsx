"use client";
import React, { useState, useEffect, useRef } from "react";

const NORA_COLOR = "#2e2e2e";
const ICON_SIZE = 23;
const borderRadius = 22;
const panelHeight = 62;
const maxWidth = 560;
const videoMaxWidth = 314;
const GRADIENT = "linear-gradient(90deg, #eff5fe 0%, #e5e8ed 100%)";
const BABY_GRADIENT = "linear-gradient(90deg, #e39290 0%, #efb1b6 100%)";
const INPUT_BAR_HEIGHT = 68;
const PANEL_SIDE_PADDING = 15;
const BLOCK_SIDE_PADDING = 10;
const CARD_GAP = 10;

// --- SVG-–∏–∫–æ–Ω–∫–∏ ---
const IconPartner = (
  <svg width="18" height="18" fill="none" viewBox="0 0 20 20">
    <circle cx="10" cy="6.5" r="3.3" stroke="#5a6573" strokeWidth="1.5"/>
    <path d="M2.8 16c.9-2.5 3.4-4.2 7.2-4.2s6.2 1.7 7.2 4.2" stroke="#5a6573" strokeWidth="1.5" strokeLinecap="round"/>
  </svg>
);

const IconContact = (
  <svg width="18" height="18" fill="none" viewBox="0 0 20 20">
    <rect x="2.8" y="3.5" width="14.4" height="11" rx="2.2" stroke="#5a6573" strokeWidth="1.5"/>
    <path d="M3.5 4l6.5 6.1c.3.2.8.2 1.1 0L17 4" stroke="#5a6573" strokeWidth="1.5"/>
  </svg>
);

const ICONS = {
  telegram: "https://cdn-icons-png.flaticon.com/512/1946/1946547.png",
  trash: "https://cdn-icons-png.flaticon.com/512/1345/1345823.png",
  share: "https://cdn-icons-png.flaticon.com/512/535/535285.png",
  arrowRight: (
    <svg width="22" height="22" viewBox="0 0 22 22" fill="none">
      <path d="M6 11H16M16 11L12 7M16 11L12 15"
        stroke="#fff" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
    </svg>
  ),
};
const filterNora = "invert(13%) sepia(4%) saturate(271%) hue-rotate(175deg) brightness(92%) contrast(93%)";

const BENEFITS = [
  { emoji: "ü©∫", title: "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å", text: "–°–æ–≤–µ—Ç—ã –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö –±—Ä–∏—Ç–∞–Ω—Å–∫–æ–π —Å–ª—É–∂–±—ã NHS –∏ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ–¥ –≤–∞—à —Ä–µ–≥–∏–æ–Ω." },
  { emoji: "ü§ù", title: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7", text: "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏ –¥–ª—è –∑–∞–±–æ—Ç—ã –∏ –ø–æ–º–æ—â–∏ –≤ –ª—é–±–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏." },
  { emoji: "‚è∞", title: "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –≤–∞–∂–Ω—ã—Ö –¥–µ–ª–∞—Ö", text: "–°–ª–µ–¥–∏–º, —á—Ç–æ–±—ã –≤—ã –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–±—ã–ª–∏ ‚Äî –∞–Ω–∞–ª–∏–∑—ã, –≤–∏—Ç–∞–º–∏–Ω—ã, –≤–∏–∑–∏—Ç—ã." },
  { emoji: "üîí", title: "–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å", text: "–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —É –≤–∞—Å ‚Äî –Ω–∏–∫–∞–∫–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–º." },
  { emoji: "‚ö°Ô∏è", title: "–ë—ã—Å—Ç—Ä—ã–µ —Ä–µ—à–µ–Ω–∏—è", text: "–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å—Ä–∞–∑—É, –∫–æ–≥–¥–∞ —ç—Ç–æ –Ω—É–∂–Ω–æ." },
];

const REVIEWS = [
  { name: "–ê–Ω–Ω–∞", badge: "2 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–¢–æ–∫—Å–∏–∫–æ–∑", text: "Nora Plus –ø–æ–¥—Å–∫–∞–∑–∞–ª–∞, –∫–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —É—Ç—Ä–µ–Ω–Ω–µ–π —Ç–æ—à–Ω–æ—Ç–æ–π. –ë–ª–∞–≥–æ–¥–∞—Ä—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º –ø–æ –ø–∏—Ç–∞–Ω–∏—é –∏ —Ä–µ–∂–∏–º—É –¥–Ω—è —Å–∏–º–ø—Ç–æ–º—ã —Å—Ç–∞–ª–∏ –≥–æ—Ä–∞–∑–¥–æ –ª–µ–≥—á–µ." },
  { name: "–î–∏–ª–Ω–æ–∑–∞", badge: "3 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–¢–æ—à–Ω–æ—Ç–∞", text: "–°–æ–≤–µ—Ç—ã Nora Plus –ø–æ–º–æ–≥–ª–∏ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —Ç–æ—à–Ω–æ—Ç–æ–π –∏ –ª–µ–≥—á–µ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å. –í—Å–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç –≤–æ–≤—Ä–µ–º—è." },
  { name: "–ï–ª–µ–Ω–∞", badge: "4 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–°–ª–∞–±–æ—Å—Ç—å –∏ —É—Å—Ç–∞–ª–æ—Å—Ç—å", text: "–¢–µ–ø–µ—Ä—å —è –∑–Ω–∞—é, –∫–∞–∫–∏–µ –≤–∏—Ç–∞–º–∏–Ω—ã –Ω—É–∂–Ω–æ –ø–∏—Ç—å, —Å–∫–æ–ª—å–∫–æ –æ—Ç–¥—ã—Ö–∞—Ç—å –∏ –∫–∞–∫ –≤—ã—Å—Ç—Ä–æ–∏—Ç—å –¥–µ–Ω—å. –ß—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ª—É—á—à–µ!" },
  { name: "–®–∞—Ö–Ω–æ–∑–∞", badge: "5 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–ü–ª–æ—Ö–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", text: "–ë–ª–∞–≥–æ–¥–∞—Ä—è –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–º —Å–ª–æ–≤–∞–º –∏ —Å–æ–≤–µ—Ç–∞–º Nora Plus –º–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∑–∞–º–µ—Ç–Ω–æ —É–ª—É—á—à–∏–ª–æ—Å—å." },
  { name: "–ò—Ä–∏–Ω–∞", badge: "5 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–¢—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å", text: "–°–æ–≤–µ—Ç—ã Nora Plus –ø–æ–º–æ–≥–ª–∏ –º–Ω–µ –±–æ–ª—å—à–µ –æ—Ç–¥—ã—Ö–∞—Ç—å, –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–µ–±–µ –∏ –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –ª–∏—à–Ω–∏—Ö –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏–π –∑–∞ –º–∞–ª—ã—à–∞." },
  { name: "–ú–∞—Ä–∏—è", badge: "7 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–ë–µ—Å—Å–æ–Ω–Ω–∏—Ü–∞", text: "–ë–ª–∞–≥–æ–¥–∞—Ä—è —Å–æ–≤–µ—Ç–∞–º Nora Plus —è —Å—Ç–∞–ª–∞ –ª—É—á—à–µ —Å–ø–∞—Ç—å –∏ —Å–ø–æ–∫–æ–π–Ω–æ –∂–¥—É –ø–æ—è–≤–ª–µ–Ω–∏—è –º–∞–ª—ã—à–∞." },
  { name: "–í–∏–∫—Ç–æ—Ä–∏—è", badge: "3 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–°—Ç—Ä–∞—Ö–∏", text: "Nora Plus –ø–æ–º–æ–≥–ª–∞ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —Ç—Ä–µ–≤–æ–≥–∞–º–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∞–ª–∞ —Å–æ–≤–µ—Ç–∞–º–∏, —Ç–µ–ø–µ—Ä—å —è —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è —É–≤–µ—Ä–µ–Ω–Ω–µ–µ." },
  { name: "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞", badge: "6 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–ü–∏—Ç–∞–Ω–∏–µ", text: "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –Ω–∞–ø–æ–º–Ω–∏–ª –æ –≤–∞–∂–Ω—ã—Ö –≤–∏—Ç–∞–º–∏–Ω–∞—Ö –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ, —Ç–µ–ø–µ—Ä—å –ø–∏—Ç–∞—é—Å—å –≥—Ä–∞–º–æ—Ç–Ω–æ –∏ —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è —ç–Ω–µ—Ä–≥–∏—á–Ω–æ–π." },
  { name: "–ì—É–ª—å–Ω–æ—Ä–∞", badge: "2 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–ù–∞—Ä—É—à–µ–Ω–∏–µ —Å–Ω–∞", text: "–ü—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞–≤—à–∏—Å—å —Å Nora, —è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∞ —Å–æ–Ω –∏ —Ç–µ–ø–µ—Ä—å —Ö–æ—Ä–æ—à–æ –≤—Å—Ç—Ä–µ—á–∞—é —É—Ç—Ä–æ." },
  { name: "–ú–∞–ª–∏–∫–∞", badge: "8 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–†–∞–∑–¥—Ä–∞–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", text: "–í–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏ —Å—Ç–∞–ª–∞ –Ω–µ—Ä–≤–Ω–æ–π, –Ω–æ —Å–æ–≤–µ—Ç—ã –æ—Ç Nora –ø–æ–º–æ–≥–ª–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —É–ª—É—á—à–∏–ª–æ—Å—å." },
  { name: "–õ–æ–ª–∞", badge: "4 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –±–µ–ª–∫–∞", text: "–°–æ–≤–µ—Ç—ã –ø–æ –ø–∏—Ç–∞–Ω–∏—é –æ—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω—ã–µ, —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –±–æ–ª—å—à–µ —ç–Ω–µ—Ä–≥–∏–∏." }
];

// --- –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ù–æ—Ä–∞ ---
const EXAMPLES = [
  { q: "–ú–æ–∂–Ω–æ –ª–∏ –ø–∏—Ç—å –∫–æ—Ñ–µ –≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏?", a: "‚òï –ö–æ–Ω–µ—á–Ω–æ, –Ω–æ –Ω–µ –±–æ–ª—å—à–µ 1‚Äì2 —á–∞—à–µ–∫ –≤ –¥–µ–Ω—å." },
  { q: "–Ø —á–∞—Å—Ç–æ –≤–æ–ª–Ω—É—é—Å—å –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã.", a: "ü§ó –≠—Ç–æ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ. –Ø –ø–æ–º–æ–≥—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, –∫–æ–≥–¥–∞ —Å—Ç–æ–∏—Ç –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –≤—Ä–∞—á—É." },
  { q: "–ë–æ–ª–∏—Ç —Å–ø–∏–Ω–∞ –∏ –ø–æ—è—Å–Ω–∏—Ü–∞.", a: "ü¶µ –°—Ç–∞—Ä–∞–π—Ç–µ—Å—å –±–æ–ª—å—à–µ –æ—Ç–¥—ã—Ö–∞—Ç—å –ª—ë–∂–∞ –Ω–∞ –±–æ–∫—É –∏ –≤—ã–±–∏—Ä–∞–π—Ç–µ —É–¥–æ–±–Ω—É—é –æ–±—É–≤—å." },
  { q: "–ü–ª–æ—Ö–æ —Å–ø–ª—é.", a: "üò¥ –ü—Ä–æ–≤–µ—Ç—Ä–∏–≤–∞–π—Ç–µ –∫–æ–º–Ω–∞—Ç—É, –¥–µ–ª–∞–π—Ç–µ —Å–ø–æ–∫–æ–π–Ω—ã–µ –ø—Ä–æ–≥—É–ª–∫–∏ ‚Äî –≤—Å—ë –Ω–∞–ª–∞–¥–∏—Ç—Å—è." },
  { q: "–ú–æ–∂–Ω–æ –ª–∏ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º?", a: "üèÉ –ö–æ–Ω–µ—á–Ω–æ. –†–µ–∫–æ–º–µ–Ω–¥—É—é –π–æ–≥—É, –ø–ª–∞–≤–∞–Ω–∏–µ –∏ –ø—Ä–æ–≥—É–ª–∫–∏, –±–µ–∑ –ø–µ—Ä–µ–≥—Ä—É–∑–æ–∫." },
];
const bubbleStyle = (align = "right") => ({
  alignSelf: align === "right" ? ("flex-end" as const) : ("flex-start" as const),
  background: "#fff",
  borderRadius: 19,
  padding: "15px 21px",
  marginBottom: 16,
  maxWidth: 370,
  textAlign: "left" as const,
  boxShadow: "0 1px 8px rgba(200,180,200,0.1)"
});
const NoraHowItWorksBlock = () => {
  const [step, setStep] = useState(0);
  const [phase, setPhase] = useState("typeQ");
  const [question, setQuestion] = useState("");
  const [answer, setAnswer] = useState("");
  useEffect(() => {
    if (phase === "typeQ") {
      setQuestion("");
      let i = 0;
      const int = setInterval(() => {
        setQuestion(EXAMPLES[step].q.slice(0, i + 1));
        i++;
        if (i > EXAMPLES[step].q.length) {
          clearInterval(int);
          setTimeout(() => setPhase("typeA"), 350);
        }
      }, 40);
      return () => clearInterval(int);
    }
    if (phase === "typeA") {
      setAnswer("");
      let i = 0;
      const int = setInterval(() => {
        setAnswer(EXAMPLES[step].a.slice(0, i + 1));
        i++;
        if (i > EXAMPLES[step].a.length) {
          clearInterval(int);
          setTimeout(() => setPhase("next"), 6000);
        }
      }, 25);
      return () => clearInterval(int);
    }
    if (phase === "next") {
      const nextDelay = setTimeout(() => {
        setStep((s) => (s + 1) % EXAMPLES.length);
        setPhase("typeQ");
      }, 500);
      return () => clearTimeout(nextDelay);
    }
  }, [phase, step]);
  return (
    <div style={{
      width: `calc(100% - ${BLOCK_SIDE_PADDING * 2}px)`,
      maxWidth,
      margin: "0 auto 38px auto",
      background: GRADIENT,
      borderRadius: borderRadius,
      boxShadow: "0 6px 20px 0 rgba(150,175,205,0.10)",
      boxSizing: "border-box",
      padding: `21px 0 20px 0`,
      fontFamily: "'Manrope', Arial, Helvetica, sans-serif"
    }}>
      <div style={{
        fontWeight: 700,
        fontSize: "20px",
        color: NORA_COLOR,
        marginBottom: 20,
        textAlign: "center"
      }}>
        –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Nora?
      </div>
      <div style={{
        display: "flex",
        flexDirection: "column",
        gap: CARD_GAP,
        padding: `0 ${BLOCK_SIDE_PADDING}px`
      }}>
        {question && <div style={bubbleStyle("right")}>{question}</div>}
        {answer && <div style={bubbleStyle("left")}>{answer}</div>}
      </div>
      <div style={{ fontSize: 13, color: "#7b8590", textAlign: "center", marginTop: 8 }}>
        –ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å ‚Äî –ù–æ—Ä–∞ –Ω–∞–π–¥—ë—Ç –æ—Ç–≤–µ—Ç!
      </div>
    </div>
  );
};

const WhyNoraBlock = /* ... —Ç–≤–æ—è —á–∞—Å—Ç—å ... */;
const ReviewBlock = /* ... —Ç–≤–æ—è —á–∞—Å—Ç—å ... */;
const Footer = /* ... —Ç–≤–æ—è —á–∞—Å—Ç—å ... */;
const FooterGap = () => <div style={{height: 20}} />;

const Chat = () => (
  <div>
    {/* ...—Ç–≤–æ–π header, welcome, —Å–µ–∫—Ü–∏–∏... */}
    {/* –ø—Ä–æ—Å—Ç–æ –≤—Å—Ç–∞–≤—å –ø–æ—Å–ª–µ welcome-—Å—Ü–µ–Ω–∞—Ä–∏—è –≤–æ—Ç —Ç–∞–∫: */}
    <NoraHowItWorksBlock />
    <WhyNoraBlock />
    <ReviewBlock />
    <Footer />
    <FooterGap />
  </div>
);

export default Chat;
