"use client";
import React, { useState, useEffect, useRef } from "react";

// --- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã ---
const NORA_COLOR = "#2e2e2e";
const ICON_SIZE = 23;
const borderRadius = 22;
const panelHeight = 62;
const maxWidth = 560;
const videoMaxWidth = 314;
const GRADIENT = "linear-gradient(90deg, #eff5fe 0%, #e5e8ed 100%)";
const BABY_GRADIENT = "linear-gradient(90deg, #e39290 0%, #efb1b6 100%)";
const BLOCK_SIDE_PADDING = 10;
const CARD_GAP = 10;

// --- –ò–∫–æ–Ω–∫–∏ ---
const IconPartner = (
  <svg width="18" height="18" fill="none" viewBox="0 0 20 20">
    <circle cx="10" cy="6.5" r="3.3" stroke="#5a6573" strokeWidth="1.5"/>
    <path d="M2.8 16c.9-2.5 3.4-4.2 7.2-4.2s6.2 1.7 7.2 4.2"
      stroke="#5a6573" strokeWidth="1.5" strokeLinecap="round"/>
  </svg>
);
const IconContact = (
  <svg width="18" height="18" fill="none" viewBox="0 0 20 20">
    <rect x="2.8" y="3.5" width="14.4" height="11" rx="2.2"
      stroke="#5a6573" strokeWidth="1.5"/>
    <path d="M3.5 4l6.5 6.1c.3.2.8.2 1.1 0L17 4"
      stroke="#5a6573" strokeWidth="1.5"/>
  </svg>
);

// --- –ò–∫–æ–Ω–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π ---
const ICONS = {
  telegram: "https://cdn-icons-png.flaticon.com/512/1946/1946547.png",
  trash: "https://cdn-icons-png.flaticon.com/512/1345/1345823.png",
  share: "https://cdn-icons-png.flaticon.com/512/535/535285.png",
  arrowRight: (
    <svg width="22" height="22" viewBox="0 0 22 22" fill="none">
      <path d="M6 11H16M16 11L12 7M16 11L12 15"
        stroke="#fff" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
    </svg>
  ),
};

const BENEFITS = [
  { emoji: "ü©∫", title: "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å", text: "–°–æ–≤–µ—Ç—ã –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö –±—Ä–∏—Ç–∞–Ω—Å–∫–æ–π —Å–ª—É–∂–±—ã NHS –∏ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ–¥ –≤–∞—à —Ä–µ–≥–∏–æ–Ω." },
  { emoji: "ü§ù", title: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7", text: "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏ –¥–ª—è –∑–∞–±–æ—Ç—ã –∏ –ø–æ–º–æ—â–∏ –≤ –ª—é–±–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏." },
  { emoji: "‚è∞", title: "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –≤–∞–∂–Ω—ã—Ö –¥–µ–ª–∞—Ö", text: "–°–ª–µ–¥–∏–º, —á—Ç–æ–±—ã –≤—ã –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–±—ã–ª–∏ ‚Äî –∞–Ω–∞–ª–∏–∑—ã, –≤–∏—Ç–∞–º–∏–Ω—ã, –≤–∏–∑–∏—Ç—ã." },
  { emoji: "üîí", title: "–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å", text: "–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —É –≤–∞—Å ‚Äî –Ω–∏–∫–∞–∫–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–º." },
  { emoji: "‚ö°Ô∏è", title: "–ë—ã—Å—Ç—Ä—ã–µ —Ä–µ—à–µ–Ω–∏—è", text: "–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å—Ä–∞–∑—É, –∫–æ–≥–¥–∞ —ç—Ç–æ –Ω—É–∂–Ω–æ." },
];

// --- –û—Ç–∑—ã–≤—ã ---
const REVIEWS = [
  { name: "–ê–Ω–Ω–∞", badge: "2 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–¢–æ–∫—Å–∏–∫–æ–∑", text: "Nora Plus –ø–æ–¥—Å–∫–∞–∑–∞–ª–∞, –∫–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —É—Ç—Ä–µ–Ω–Ω–µ–π —Ç–æ—à–Ω–æ—Ç–æ–π. –ë–ª–∞–≥–æ–¥–∞—Ä—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º –ø–æ –ø–∏—Ç–∞–Ω–∏—é –∏ —Ä–µ–∂–∏–º—É –¥–Ω—è —Å–∏–º–ø—Ç–æ–º—ã —Å—Ç–∞–ª–∏ –≥–æ—Ä–∞–∑–¥–æ –ª–µ–≥—á–µ." },
  { name: "–ï–ª–µ–Ω–∞", badge: "4 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–°–ª–∞–±–æ—Å—Ç—å –∏ —É—Å—Ç–∞–ª–æ—Å—Ç—å", text: "–¢–µ–ø–µ—Ä—å —è –∑–Ω–∞—é, –∫–∞–∫–∏–µ –≤–∏—Ç–∞–º–∏–Ω—ã –Ω—É–∂–Ω–æ –ø–∏—Ç—å, —Å–∫–æ–ª—å–∫–æ –æ—Ç–¥—ã—Ö–∞—Ç—å –∏ –∫–∞–∫ –≤—ã—Å—Ç—Ä–æ–∏—Ç—å –¥–µ–Ω—å. –ß—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ª—É—á—à–µ!" },
  { name: "–ò—Ä–∏–Ω–∞", badge: "5 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–¢—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å", text: "–°–æ–≤–µ—Ç—ã Nora Plus –ø–æ–º–æ–≥–ª–∏ –º–Ω–µ –±–æ–ª—å—à–µ –æ—Ç–¥—ã—Ö–∞—Ç—å, –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–µ–±–µ –∏ –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –ª–∏—à–Ω–∏—Ö –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏–π –∑–∞ –º–∞–ª—ã—à–∞." },
];

// --- WhyNoraBlock ---
const WhyNoraBlock = () => (
  <div style={{
    width: `calc(100% - ${BLOCK_SIDE_PADDING * 2}px)`,
    maxWidth,
    margin: "0 auto 38px auto",
    background: GRADIENT,
    borderRadius: borderRadius,
    boxShadow: "0 6px 20px 0 rgba(150, 175, 205, 0.10)",
    fontFamily: "'Manrope', Arial, Helvetica, sans-serif"
  }}>
    <div style={{ padding: "21px 0 20px 0" }}>
      <div style={{
        fontWeight: 700,
        fontSize: "20px",
        color: NORA_COLOR,
        textAlign: "center",
        marginBottom: 20
      }}>–ü–æ—á–µ–º—É Nora Plus?</div>
      <div style={{
        display: "flex",
        flexDirection: "column",
        gap: CARD_GAP,
        padding: `0 ${BLOCK_SIDE_PADDING}px`
      }}>
        {BENEFITS.map(({ emoji, title, text }, idx) => (
          <div key={idx} style={{
            background: "#fff",
            borderRadius: 18,
            padding: "19px 15px",
            boxShadow: "0 2px 18px 0 rgba(150,180,220,0.07)"
          }}>
            <div style={{ fontWeight: 700, fontSize: 16, color: NORA_COLOR }}>{title}</div>
            <div style={{ fontSize: 13, color: "#3a3a3a", marginTop: 7 }}>{text}</div>
          </div>
        ))}
      </div>
    </div>
  </div>
);

// --- ReviewBlock ---
const ReviewBlock = () => (
  <div style={{
    width: `calc(100% - ${BLOCK_SIDE_PADDING * 2}px)`,
    maxWidth,
    margin: "0 auto 38px auto",
    background: GRADIENT,
    borderRadius: borderRadius,
    boxShadow: "0 6px 20px 0 rgba(150, 175, 205, 0.10)"
  }}>
    <div style={{ padding: "21px 0 20px 0" }}>
      <div style={{
        fontWeight: 700,
        fontSize: "20px",
        color: NORA_COLOR,
        textAlign: "center",
        marginBottom: 20
      }}>–û—Ç–∑—ã–≤—ã –±—É–¥—É—â–∏—Ö –º–∞–º</div>
      <div style={{
        display: "flex",
        flexDirection: "column",
        gap: CARD_GAP,
        padding: `0 ${BLOCK_SIDE_PADDING}px`
      }}>
        {REVIEWS.map(({ name, badge, problem, text }, idx) => (
          <div key={idx} style={{
            background: "#fff",
            borderRadius: 18,
            padding: "19px 15px",
            boxShadow: "0 2px 18px 0 rgba(150,180,220,0.07)"
          }}>
            <div style={{ fontWeight: 700, fontSize: 15, color: "#222" }}>{name} ‚Äî {badge}</div>
            <div style={{ fontSize: 13, color: "#acb5bd", marginTop: 4 }}>{problem}</div>
            <div style={{ fontSize: 13, color: "#3a3a3a", marginTop: 8, lineHeight: 1.5 }}>{text}</div>
          </div>
        ))}
      </div>
    </div>
  </div>
);

// --- HowItWorks ---
const HowItWorks = () => {
  const EXAMPLES = [
    { q: "–Ø —á–∞—Å—Ç–æ –≤–æ–ª–Ω—É—é—Å—å –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã.", a: "ü§ó –≠—Ç–æ –æ—á–µ–Ω—å —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–æ —É –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö! –≠–º–æ—Ü–∏–∏ —É—Å–∏–ª–∏–≤–∞—é—Ç—Å—è –∏–∑-–∑–∞ –≥–æ—Ä–º–æ–Ω–æ–≤..." },
    { q: "–ë–æ–ª–∏—Ç —Å–ø–∏–Ω–∞ –∏ –ø–æ—è—Å–Ω–∏—Ü–∞.", a: "üíÜ –≠—Ç–æ —á–∞—Å—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º —Ü–µ–Ω—Ç—Ä–∞ —Ç—è–∂–µ—Å—Ç–∏..." },
    { q: "–ü–ª–æ—Ö–æ —Å–ø–ª—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–Ω–∏.", a: "üò¥ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ–≥—É–ª–∫–∏ –∏ –ª–µ–≥–∫–∏–µ —Ä–∞—Å—Ç—è–∂–∫–∏ –¥–ª—è —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏—è..." },
    { q: "–ú–æ–∂–Ω–æ –ª–∏ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º?", a: "üèÉ‚Äç‚ôÄÔ∏è –î–∞, –Ω–æ –≤—ã–±–∏—Ä–∞–π—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è: –π–æ–≥–∞, –ø–ª–∞–≤–∞–Ω–∏–µ..." },
  ];
  const [step, setStep] = useState(0);
  const [phase, setPhase] = useState("q");
  const [q, setQ] = useState("");
  const [a, setA] = useState("");

  useEffect(() => {
    let t;
    if (phase === "q") {
      setQ("");
      let i = 0;
      t = setInterval(() => {
        setQ(EXAMPLES[step].q.slice(0, i + 1));
        i++;
        if (i > EXAMPLES[step].q.length) { clearInterval(t); setTimeout(() => setPhase("a"), 350); }
      }, 35);
    } else if (phase === "a") {
      setA(""); let i = 0;
      t = setInterval(() => {
        setA(EXAMPLES[step].a.slice(0, i + 1));
        i++;
        if (i > EXAMPLES[step].a.length) { clearInterval(t); setTimeout(() => setPhase("next"), 6900); }
      }, 17);
    } else if (phase === "next") {
      t = setTimeout(() => { setStep((s) => (s + 1) % EXAMPLES.length); setPhase("q"); }, 350);
    }
    return () => clearInterval(t);
  }, [phase, step]);

  return (
    <div style={{
      width: `calc(100% - ${BLOCK_SIDE_PADDING * 2}px)`,
      maxWidth,
      margin: "0 auto 38px auto",
      background: GRADIENT,
      borderRadius: 22,
      boxShadow: "0 6px 20px rgba(150,175,205,0.1)",
      padding: "21px 0 20px 0"
    }}>
      <div style={{
        display: "flex",
        flexDirection: "column",
        padding: `0 ${BLOCK_SIDE_PADDING}px`
      }}>
        {q && <div style={{
          alignSelf: "flex-end",
          background: "#fff",
          borderRadius: "18px 18px 4px 18px",
          padding: "18px 20px",
          marginBottom: 18,
          fontSize: 15.5
        }}>{q}</div>}
        {a && <div style={{
          alignSelf: "flex-start",
          background: "#f7fafd",
          borderRadius: "18px 18px 18px 4px",
          padding: "18px 20px",
          fontSize: 15.5
        }}>{a}</div>}
      </div>
    </div>
  );
};

// --- TabPanel ---
const TABS = [
  { key: "how", label: "–ü—Ä–∏–º–µ—Ä" },
  { key: "why", label: "–ü–æ—á–µ–º—É Nora?" },
  { key: "reviews", label: "–û—Ç–∑—ã–≤—ã" },
];
const TabPanel = () => {
  const [activeTab, setActiveTab] = useState("how");
  const tabStyle = (isActive) => ({
    flex: 1,
    padding: "14px 0",
    border: "none",
    borderRadius: borderRadius,
    fontWeight: 700,
    fontSize: "16px",
    background: isActive ? BABY_GRADIENT : GRADIENT,
    color: isActive ? "#fff" : NORA_COLOR,
    cursor: "pointer"
  });
  return (
    <div style={{
      width: `calc(100% - ${BLOCK_SIDE_PADDING * 2}px)`,
      maxWidth,
      margin: "0 auto"
    }}>
      <div style={{
        display: "flex",
        gap: 12,
        marginBottom: 25
      }}>
        {TABS.map(t => (
          <button key={t.key} onClick={() => setActiveTab(t.key)} style={tabStyle(activeTab === t.key)}>
            {t.label}
          </button>
        ))}
      </div>
      {activeTab === "how" && <HowItWorks />}
      {activeTab === "why" && <WhyNoraBlock />}
      {activeTab === "reviews" && <ReviewBlock />}
    </div>
  );
};

// --- Footer ---
const Footer = () => (
  <div style={{
    width: "calc(100% - 40px)",
    maxWidth,
    margin: "0 auto",
    background: GRADIENT,
    borderRadius: "22px",
    fontFamily: "'Manrope', Arial, Helvetica, sans-serif",
    padding: 20,
    textAlign: "center"
  }}>
    <div style={{ fontSize: 12, color: "#263540", fontWeight: 600 }}>–¢–∞—à–∫–µ–Ω—Ç, –Æ–Ω—É—Å–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω, –º–∞—Å—Å–∏–≤ –ö–∞—à–≥–∞—Ä 26</div>
    <div style={{ marginTop: 14, display: "flex", justifyContent: "center", gap: 10 }}>
      <a href="#" style={{ background: "#fff", border: "1px solid #e1e9f5", borderRadius: 14, padding: "8px 18px", fontSize: 14, color: "#495062", textDecoration: "none" }}>{IconPartner} –°—Ç–∞—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º</a>
      <a href="#" style={{ background: "#fff", border: "1px solid #e1e9f5", borderRadius: 14, padding: "8px 18px", fontSize: 14, color: "#495062", textDecoration: "none" }}>{IconContact} –ö–æ–Ω—Ç–∞–∫—Ç—ã</a>
    </div>
    <a href="#" style={{ display: "block", marginTop: 12, fontSize: 14, color: "#495062", textDecoration: "none" }}>–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>
    <div style={{ marginTop: 8, fontSize: 12, color: "#8a97a0" }}>¬© {new Date().getFullYear()} Nora Plus ‚Äî –∑–∞–±–æ—Ç–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –±—É–¥—É—â–∏—Ö –º–∞–º</div>
  </div>
);
const FooterGap = () => <div style={{ height: 20 }} />;

// --- Chat ---
const Chat = () => {
  const [showWelcome, setShowWelcome] = useState(true);
  if (showWelcome) {
    return (
      <div style={{
        fontFamily: "'Manrope', Arial",
        background: "#f8fdff",
        width: "100vw",
        minHeight: "100vh"
      }}>
        <div style={{
          textAlign: "center",
          marginTop: 40
        }}>
          <h1 style={{ fontSize: 24, color: NORA_COLOR }}>–ñ–¥—ë—Ç–µ –º–∞–ª—ã—à–∞? –Ø –ø–æ–º–æ–≥—É!</h1>
          <p style={{ fontSize: 15, maxWidth: 380, margin: "0 auto", lineHeight: 1.6 }}>–Ø —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—é –±—É–¥—É—â–∏—Ö –º–∞–º –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏ ‚Äî –¥–∞—é —Å–æ–≤–µ—Ç—ã, —Å–ª–µ–∂—É –∑–∞ –∑–¥–æ—Ä–æ–≤—å–µ–º –∏ –ø–æ–º–æ–≥–∞—é –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–µ–±–µ.</p>
          <button
            style={{
              marginTop: 30,
              background: BABY_GRADIENT,
              color: "#fff",
              fontWeight: 700,
              fontSize: "17px",
              border: "none",
              borderRadius: borderRadius,
              padding: "15px 30px",
              cursor: "pointer"
            }}
            onClick={() => setShowWelcome(false)}
          >
            –ù–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è {ICONS.arrowRight}
          </button>
          <div style={{ height: 40 }} />
          <TabPanel />
          <Footer />
          <FooterGap />
        </div>
      </div>
    );
  }
  // –ó–¥–µ—Å—å –æ—Å—Ç–∞–≤—å –æ—Å—Ç–∞–ª—å–Ω—É—é —á–∞—Å—Ç—å —Ç–≤–æ–µ–≥–æ —á–∞—Ç–∞ (–∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª–∞)
  return <div>–ß–∞—Ç —Å—Ç—Ä–∞–Ω–∏—Ü–∞...</div>;
};

export default Chat;
