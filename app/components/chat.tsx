"use client";
import React, { useState, useEffect, useRef } from "react";

const NORA_COLOR = "#2e2e2e";
const ICON_SIZE = 23;
const borderRadius = 22;
const panelHeight = 62;
const maxWidth = 560;
const videoMaxWidth = 314;
const GRADIENT = "linear-gradient(90deg, #eff5fe 0%, #e5e8ed 100%)";
const BABY_GRADIENT = "linear-gradient(90deg, #e39290 0%, #efb1b6 100%)";
const INPUT_BAR_HEIGHT = 68;
const PANEL_SIDE_PADDING = 15;
const BLOCK_SIDE_PADDING = 10;
const CARD_GAP = 10;

const ICONS = {
  telegram: "https://cdn-icons-png.flaticon.com/512/1946/1946547.png",
  trash: "https://cdn-icons-png.flaticon.com/512/1345/1345823.png",
  share: "https://cdn-icons-png.flaticon.com/512/535/535285.png",
  arrowRight: (
    <svg width="22" height="22" viewBox="0 0 22 22" fill="none">
      <path d="M6 11H16M16 11L12 7M16 11L12 15"
        stroke="#fff" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
    </svg>
  ),
};

const filterNora = "invert(13%) sepia(4%) saturate(271%) hue-rotate(175deg) brightness(92%) contrast(93%)";

const IconPartner = (
  <svg width="18" height="18" fill="none" viewBox="0 0 20 20">
    <circle cx="10" cy="6.5" r="3.3" stroke="#5a6573" strokeWidth="1.5"/>
    <path d="M2.8 16c.9-2.5 3.4-4.2 7.2-4.2s6.2 1.7 7.2 4.2" stroke="#5a6573" strokeWidth="1.5" strokeLinecap="round"/>
  </svg>
);
const IconContact = (
  <svg width="18" height="18" fill="none" viewBox="0 0 20 20">
    <rect x="2.8" y="3.5" width="14.4" height="11" rx="2.2" stroke="#5a6573" strokeWidth="1.5"/>
    <path d="M3.5 4l6.5 6.1c.3.2.8.2 1.1 0L17 4" stroke="#5a6573" strokeWidth="1.5"/>
  </svg>
);
const iconPolicy = (
  <svg width="17" height="17" fill="none" viewBox="0 0 20 20">
    <rect x="4" y="7" width="12" height="9" rx="2.1" stroke="#5a6573" strokeWidth="1.4"/>
    <path d="M7,7V5a3,3 0 0,1 6,0v2" stroke="#5a6573" strokeWidth="1.4" fill="none"/>
  </svg>
);

const BENEFITS = [
  { emoji: "ü©∫", title: "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å", text: "–°–æ–≤–µ—Ç—ã –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö NHS –∏ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ–¥ –≤–∞—à —Ä–µ–≥–∏–æ–Ω." },
  { emoji: "ü§ù", title: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7", text: "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –≤ –Ω—É–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç." },
  { emoji: "‚è∞", title: "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ –∑–∞–±–æ—Ç–∞", text: "–°–ª–µ–¥–∏–º –∑–∞ –≤–∞–∂–Ω—ã–º–∏ –∞–Ω–∞–ª–∏–∑–∞–º–∏, –≤–∏–∑–∏—Ç–∞–º–∏ –∏ –≤–∏—Ç–∞–º–∏–Ω–∞–º–∏." },
  { emoji: "üîí", title: "–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å", text: "–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –Ω–∞–¥—ë–∂–Ω–æ –∑–∞—â–∏—â–µ–Ω—ã –∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º." },
  { emoji: "‚ö°Ô∏è", title: "–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã", text: "–í—Å–µ —Å–æ–≤–µ—Ç—ã ‚Äî —Å—Ä–∞–∑—É –∏ –ø–æ –¥–µ–ª—É, –ø–æ–Ω—è—Ç–Ω—ã–º —è–∑—ã–∫–æ–º." }
];
const REVIEWS = [
  { name: "–ê–Ω–Ω–∞", badge: "2 –º–µ—Å—è—Ü", problem: "–¢–æ–∫—Å–∏–∫–æ–∑", text: "Nora Plus –ø–æ–º–æ–≥–ª–∞ —É–º–µ–Ω—å—à–∏—Ç—å —Ç–æ—à–Ω–æ—Ç—É –∏ –¥–∞–ª–∞ —Å–æ–≤–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ä–µ–∞–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞—é—Ç." },
  { name: "–ï–ª–µ–Ω–∞", badge: "4 –º–µ—Å—è—Ü", problem: "–°–ª–∞–±–æ—Å—Ç—å", text: "–ü–æ—Å–ª–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –Ω–∞–º–Ω–æ–≥–æ –ª—É—á—à–µ ‚Äî —Ä–µ–∂–∏–º –∏ –≤–∏—Ç–∞–º–∏–Ω—ã –ø–æ–º–æ–≥–∞—é—Ç!" },
  { name: "–ú–∞—Ä–∏—è", badge: "7 –º–µ—Å—è—Ü", problem: "–ë–µ—Å—Å–æ–Ω–Ω–∏—Ü–∞", text: "–¢–µ–ø–µ—Ä—å —Å–ø–ª—é —Å–ø–æ–∫–æ–π–Ω–æ, —Å–æ–≤–µ—Ç—ã –ø–æ –ø–∏—Ç–∞–Ω–∏—é –∏ –æ—Ç–¥—ã—Ö—É –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å—Ä–∞–±–æ—Ç–∞–ª–∏." },
  { name: "–®–∞—Ö–Ω–æ–∑–∞", badge: "5 –º–µ—Å—è—Ü", problem: "–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", text: "–û–±–æ–¥—Ä—è—é—â–∏–µ —Å–ª–æ–≤–∞ –∏ –∑–∞–±–æ—Ç–∞ –æ—Ç –ù–æ—Ä—ã –ø–æ–º–æ–≥–ª–∏ –≤–µ—Ä–Ω—É—Ç—å —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ." }
];

const HowItWorks = () => {
  const EXAMPLES = [
    { q: "–ú–æ–∂–Ω–æ –ª–∏ –ø–∏—Ç—å –∫–æ—Ñ–µ –≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏?", a: "‚òï –î–∞, –º–æ–∂–Ω–æ, –Ω–æ –º–∞–∫—Å–∏–º—É–º 1‚Äì2 —á–∞—à–∫–∏ –≤ –¥–µ–Ω—å. –õ—É—á—à–µ —á–µ—Ä–µ–¥–æ–≤–∞—Ç—å —Å —Ç—Ä–∞–≤—è–Ω—ã–º–∏ —á–∞—è–º–∏ –∏ —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ–º." },
    { q: "–ß–∞—Å—Ç–æ –≤–æ–ª–Ω—É—é—Å—å –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã.", a: "ü§ó –≠—Ç–æ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ! –ë–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å —É—Å–∏–ª–∏–≤–∞–µ—Ç —ç–º–æ—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ –ø—Ä–æ–≥—É–ª–∫–∏ ‚Äî —Ä–∞—Å—Å–∫–∞–∂—É, –∫–∞–∫–∏–µ –ª—É—á—à–µ –ø–æ–¥–æ–π–¥—É—Ç." },
    { q: "–ë–æ–ª–∏—Ç —Å–ø–∏–Ω–∞ –∏ –ø–æ—è—Å–Ω–∏—Ü–∞.", a: "üíÜ –≠—Ç–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–æ —É –±—É–¥—É—â–∏—Ö –º–∞–º. –û—Ç–¥—ã—Ö–∞–π—Ç–µ –ª—ë–∂–∞ –Ω–∞ –±–æ–∫—É, –Ω–µ –ø–æ–¥–Ω–∏–º–∞–π—Ç–µ —Ç—è–∂–µ—Å—Ç–µ–π –∏ –¥–µ–ª–∞–π—Ç–µ –ª—ë–≥–∫—É—é –≥–∏–º–Ω–∞—Å—Ç–∏–∫—É." },
    { q: "–ü—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–Ω–æ–º.", a: "üò¥ –ü—Ä–æ–≤–µ—Ç—Ä–∏–≤–∞–π—Ç–µ –∫–æ–º–Ω–∞—Ç—É –∏ –ª–æ–∂–∏—Ç–µ—Å—å –≤ –æ–¥–Ω–æ –≤—Ä–µ–º—è. –ü–æ–º–æ–≥–∞—é –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø—Ä–æ—Å—Ç—ã–µ —Å–ø–æ—Å–æ–±—ã –∑–∞—Å–Ω—É—Ç—å –±—ã—Å—Ç—Ä–µ–µ." },
    { q: "–ú–æ–∂–Ω–æ –ª–∏ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º?", a: "üèÉ –î–∞, –µ—Å–ª–∏ –Ω–µ—Ç –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏–π. –°–∞–º–æ–µ –ø–æ–ª–µ–∑–Ω–æ–µ ‚Äî –ø–ª–∞–≤–∞–Ω–∏–µ, –ª—ë–≥–∫–∞—è –π–æ–≥–∞ –∏ –ø—Ä–æ–≥—É–ª–∫–∏." },
  ];
  const [step, setStep] = useState(0);
  const [phase, setPhase] = useState("q");
  const [q, setQ] = useState("");
  const [a, setA] = useState("");
  useEffect(() => {
    let t;
    if (phase === "q") {
      setQ("");
      let i = 0; t = setInterval(() => { setQ(EXAMPLES[step].q.slice(0, i + 1)); i++; if (i > EXAMPLES[step].q.length) { clearInterval(t); setTimeout(() => setPhase("a"), 300); }}, 35);
    } else if (phase === "a") {
      setA(""); let i = 0; t = setInterval(() => { setA(EXAMPLES[step].a.slice(0, i + 1)); i++; if (i > EXAMPLES[step].a.length) { clearInterval(t); setTimeout(() => setPhase("next"), 7000); }}, 18);
    } else if (phase === "next") {
      t = setTimeout(() => { setStep((s) => (s + 1) % EXAMPLES.length); setPhase("q"); }, 300);
    }
    return () => clearTimeout(t);
  }, [phase, step]);

  const bubbleUser = (text) => (<div style={{ alignSelf: "flex-end", background: "#fff", borderRadius: "19px 19px 4px 19px",
    padding: "22px 25px", marginBottom: 32, textAlign: "right", fontSize: 16, lineHeight: 1.7,
    boxShadow: "0 1px 8px rgba(200,180,200,0.12)" }}>{text}</div>);
  const bubbleBot = (text) => (<div style={{ alignSelf: "flex-start", background: "#f7fafd", borderRadius: "19px 19px 19px 4px",
    padding: "22px 25px", marginBottom: 32, textAlign: "left", fontSize: 16, lineHeight: 1.7,
    boxShadow: "0 1px 8px rgba(200,180,200,0.12)" }}>{text}</div>);

  return (
    <div style={{ width: `calc(100% - ${BLOCK_SIDE_PADDING * 2}px)`, maxWidth, margin: "0 auto 38px auto",
      background: GRADIENT, borderRadius: 22, padding: "24px 0 20px", boxShadow: "0 6px 20px rgba(150,175,205,0.1)" }}>
      <div style={{ display: "flex", flexDirection: "column", padding: "0 16px" }}>
        {q && bubbleUser(q)}
        {a && bubbleBot(a)}
      </div>
      <div style={{ textAlign: "center", fontSize: 13, color: "#7b8590" }}>–ü—Ä–æ—Å—Ç–æ —Å–ø—Ä–æ—Å–∏—Ç–µ ‚Äî –ù–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∏—Ç!</div>
    </div>
  );
};

const Footer = () => (
  <div style={{ width: `calc(100% - 40px)`, maxWidth, margin: "0 auto",
    background: GRADIENT, borderRadius: 22, padding: "22px 20px",
    boxShadow: "0 -4px 14px rgba(155,175,205,0.06)", display: "flex",
    flexDirection: "column", alignItems: "center", gap: 18 }}>
    <div style={{ fontSize: 12, color: "#263540", fontWeight: 600 }}>–¢–∞—à–∫–µ–Ω—Ç, –Æ–Ω—É—Å–∞–±–∞–¥, –º–∞—Å—Å–∏–≤ –ö–∞—à–≥–∞—Ä 26</div>
    <div style={{ display: "flex", gap: 11, width: "100%", justifyContent: "center" }}>
      <a href="#" style={{ background: "#fff", width: "63%", borderRadius: 13, color: "#495062",
        fontSize: 14, padding: "9px 0", textDecoration: "none", border: "1px solid #e1e9f5",
        display: "flex", alignItems: "center", justifyContent: "center", gap: 7 }}>{IconPartner} –°—Ç–∞—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º</a>
      <a href="#" style={{ background: "#fff", width: "37%", borderRadius: 13, color: "#495062",
        fontSize: 14, padding: "9px 0", textDecoration: "none", border: "1px solid #e1e9f5",
        display: "flex", alignItems: "center", justifyContent: "center", gap: 7 }}>{IconContact} –ö–æ–Ω—Ç–∞–∫—Ç—ã</a>
    </div>
    <a href="#" style={{ background: "#fff", padding: "7px 0", width: "100%", borderRadius: 14,
      color: "#556", fontSize: 14, textDecoration: "none", border: "1px solid #e1e9f5",
      display: "flex", alignItems: "center", justifyContent: "center", gap: 8 }}>{iconPolicy} –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>
    <div style={{ fontSize: 12, color: "#8a97a0" }}>¬© {new Date().getFullYear()} Nora Plus</div>
  </div>
);

const WhyNoraBlock = ({ title, items }) => (
  <div style={{ width: `calc(100% - ${BLOCK_SIDE_PADDING * 2}px)`, maxWidth, margin: "0 auto 38px auto",
    background: GRADIENT, borderRadius: borderRadius, boxShadow: "0 6px 20px rgba(150,175,205,0.1)",
    fontFamily: "'Manrope', Arial, sans-serif" }}>
    <div style={{ padding: "21px 0 20px 0" }}>
      <div style={{ fontWeight: 700, fontSize: 20, color: NORA_COLOR, marginBottom: 20, textAlign: "center" }}>{title}</div>
      <div style={{ display: "flex", flexDirection: "column", gap: CARD_GAP, padding: `0 ${BLOCK_SIDE_PADDING}px` }}>
        {items.map(({ emoji, title, text }, idx) => (
          <div key={idx} style={{ background: "#fff", borderRadius: 18, boxShadow: "0 2px 18px rgba(150,180,220,0.07)",
            padding: "22px 16px", textAlign: "left", position: "relative" }}>
            <span style={{ position: "absolute", right: 12, top: 12, fontSize: 54, opacity: 0.1 }}>{emoji}</span>
            <div style={{ fontWeight: 700, fontSize: 16, color: NORA_COLOR, marginBottom: 6 }}>{title}</div>
            <div style={{ fontSize: 14, color: "#3a3a3a", lineHeight: 1.65 }}>{text}</div>
          </div>
        ))}
      </div>
    </div>
  </div>
);

const Chat = () => {
  const [showWelcome, setShowWelcome] = useState(true);
  const handleShare = () => window.alert("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –≤ —ç—Ç–æ–π —Å—Ä–µ–¥–µ");
  if (showWelcome)
    return (
      <div style={{ fontFamily: "'Manrope', Arial, sans-serif", background: "#f8fdff", width: "100vw", minHeight: "100vh" }}>
        {/* –ü–∞–Ω–µ–ª—å */}
        <div style={{ width: `calc(100% - ${PANEL_SIDE_PADDING * 2}px)`, maxWidth, minHeight: panelHeight,
          background: GRADIENT, color: NORA_COLOR, margin: "20px auto 0 auto",
          display: "flex", alignItems: "center", justifyContent: "space-between", borderRadius: borderRadius,
          paddingLeft: PANEL_SIDE_PADDING, paddingRight: PANEL_SIDE_PADDING }}>
          <div style={{ display: "flex", flexDirection: "column", alignItems: "flex-start" }}>
            <span style={{ fontWeight: 800, fontSize: 19 }}>Nora Plus</span>
            <span style={{ fontWeight: 400, fontSize: 13, color: "#565656" }}>–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –±—É–¥—É—â–∏—Ö –º–∞–º</span>
          </div>
          <div style={{ display: "flex", alignItems: "center", gap: 8 }}>
            <button style={{ background: "transparent", border: "none", cursor: "pointer" }} onClick={handleShare}>
              <img src={ICONS.share} alt="Share" style={{ width: ICON_SIZE, height: ICON_SIZE, filter: filterNora }} />
            </button>
            <button style={{ background: "transparent", border: "none", cursor: "pointer" }}>
              <img src={ICONS.telegram} alt="Telegram" style={{ width: ICON_SIZE, height: ICON_SIZE, filter: filterNora }} />
            </button>
          </div>
        </div>
        {/* –í–∏–¥–µ–æ */}
        <div style={{ textAlign: "center", marginTop: 30 }}>
          <video src="/nora.mp4" style={{ width: "100%", maxWidth: videoMaxWidth, borderRadius: 24 }}
            autoPlay playsInline muted loop preload="auto" />
        </div>
        {/* –¢–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫–∞ */}
        <div style={{ maxWidth, margin: "0 auto", padding: "30px 20px", textAlign: "center" }}>
          <h2 style={{ fontWeight: 700, fontSize: 22, color: NORA_COLOR }}>–ñ–¥—ë—Ç–µ –º–∞–ª—ã—à–∞? –Ø –ø–æ–º–æ–≥—É!</h2>
          <p style={{ fontSize: 15, lineHeight: 1.7, color: NORA_COLOR }}>
            –Ø —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—é –±—É–¥—É—â–∏—Ö –º–∞–º —Å –ø–µ—Ä–≤–æ–≥–æ –º–µ—Å—è—Ü–∞ –¥–æ —Ä–æ–¥–æ–≤ ‚Äî –æ—Ç–≤–µ—á–∞—é –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, —Å–ª–µ–∂—É –∑–∞ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ–º –∏ –Ω–∞–ø–æ–º–∏–Ω–∞—é –æ –≤–∞–∂–Ω—ã—Ö –¥–µ–ª–∞—Ö.
          </p>
          <button style={{
            background: BABY_GRADIENT, color: "#fff", border: "none", borderRadius: borderRadius,
            fontWeight: 700, fontSize: 17, padding: "15px 30px", cursor: "pointer",
            marginTop: 20, boxShadow: "0 2px 18px rgba(200,128,140,0.09)"
          }} onClick={() => setShowWelcome(false)}>–ù–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è</button>
          <p style={{ fontSize: 13, color: "#7c8792", marginTop: 10 }}>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ ‚Äî —ç—Ç–æ –±—ã—Å—Ç—Ä–æ –∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ</p>
        </div>

        {/* –ë–ª–æ–∫–∏ */}
        <HowItWorks />
        <WhyNoraBlock title="–ü–æ—á–µ–º—É Nora Plus?" items={BENEFITS} />
        <WhyNoraBlock title="–û—Ç–∑—ã–≤—ã –±—É–¥—É—â–∏—Ö –º–∞–º" items={REVIEWS.map(r => ({ emoji: "üí¨", title: `${r.name}, ${r.badge}`, text: r.text }))} />
        <Footer />
      </div>
    );

  return <div>–ó–¥–µ—Å—å –±—É–¥–µ—Ç —á–∞—Ç –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è ¬´–ù–∞—á–∞—Ç—å¬ª</div>;
};

export default Chat;
