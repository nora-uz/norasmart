"use client";
import React, { useState, useEffect, useRef } from "react";

// -- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ –∏–∫–æ–Ω–∫–∏ ---
const NORA_COLOR = "#2e2e2e";
const ICON_SIZE = 23;
const borderRadius = 22;
const panelHeight = 62;
const maxWidth = 560;
const videoMaxWidth = 314;
const GRADIENT =
  "linear-gradient(90deg, #eff5fe 0%, #e5e8ed 100%)";
const BABY_GRADIENT =
  "linear-gradient(90deg, #e39290 0%, #efb1b6 100%)";
const INPUT_BAR_HEIGHT = 68;
const PANEL_SIDE_PADDING = 15;
const BLOCK_SIDE_PADDING = 10;
const CARD_GAP = 10;

const IconPartner = (
  <svg width="18" height="18" fill="none" viewBox="0 0 20 20">
    <circle cx="10" cy="6.5" r="3.3" stroke="#5a6573" strokeWidth="1.5" />
    <path d="M2.8 16c.9-2.5 3.4-4.2 7.2-4.2s6.2 1.7 7.2 4.2"
          stroke="#5a6573" strokeWidth="1.5" strokeLinecap="round" />
  </svg>
);

const IconContact = (
  <svg width="18" height="18" fill="none" viewBox="0 0 20 20">
    <rect x="2.8" y="3.5" width="14.4" height="11" rx="2.2"
          stroke="#5a6573" strokeWidth="1.5" />
    <path d="M3.5 4l6.5 6.1c.3.2.8.2 1.1 0L17 4"
          stroke="#5a6573" strokeWidth="1.5" />
  </svg>
);

const IconPolicy = (
  <svg width="16" height="16" fill="none" viewBox="0 0 20 20"
       style={{ marginRight: 6 }}>
    <path d="M4 4.5V10c0 5 7 6.5 7 6.5s7-1.5 7-6.5v-5.5l-7-2-7 2Z"
          stroke="#4d5762" strokeWidth="1.5" fill="none" />
  </svg>
);

const ICONS = {
  telegram: "https://cdn-icons-png.flaticon.com/512/1946/1946547.png",
  trash: "https://cdn-icons-png.flaticon.com/512/1345/1345823.png",
  share: "https://cdn-icons-png.flaticon.com/512/535/535285.png",
  arrowRight: (
    <svg width="22" height="22" viewBox="0 0 22 22" fill="none">
      <path d="M6 11H16M16 11L12 7M16 11L12 15"
            stroke="#fff" strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"/>
    </svg>
  ),
};
const filterNora = "invert(13%) sepia(4%) saturate(271%) hue-rotate(175deg) brightness(92%) contrast(93%)";

const BENEFITS = [
  { emoji: "ü©∫", title: "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å", text: "–°–æ–≤–µ—Ç—ã –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö –±—Ä–∏—Ç–∞–Ω—Å–∫–æ–π —Å–ª—É–∂–±—ã NHS –∏ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ–¥ –≤–∞—à —Ä–µ–≥–∏–æ–Ω." },
  { emoji: "ü§ù", title: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7", text: "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏ –¥–ª—è –∑–∞–±–æ—Ç—ã –∏ –ø–æ–º–æ—â–∏ –≤ –ª—é–±–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏." },
  { emoji: "‚è∞", title: "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –≤–∞–∂–Ω—ã—Ö –¥–µ–ª–∞—Ö", text: "–°–ª–µ–¥–∏–º, —á—Ç–æ–±—ã –≤—ã –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–±—ã–ª–∏ ‚Äî –∞–Ω–∞–ª–∏–∑—ã, –≤–∏—Ç–∞–º–∏–Ω—ã, –≤–∏–∑–∏—Ç—ã." },
  { emoji: "üîí", title: "–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å", text: "–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —É –≤–∞—Å ‚Äî –Ω–∏–∫–∞–∫–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–º." },
  { emoji: "‚ö°Ô∏è", title: "–ë—ã—Å—Ç—Ä—ã–µ —Ä–µ—à–µ–Ω–∏—è", text: "–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å—Ä–∞–∑—É, –∫–æ–≥–¥–∞ —ç—Ç–æ –Ω—É–∂–Ω–æ." },
];

const REVIEWS = [
  { name: "–ê–Ω–Ω–∞", badge: "2 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–¢–æ–∫—Å–∏–∫–æ–∑", text: "Nora Plus –ø–æ–¥—Å–∫–∞–∑–∞–ª–∞, –∫–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —É—Ç—Ä–µ–Ω–Ω–µ–π —Ç–æ—à–Ω–æ—Ç–æ–π. –ë–ª–∞–≥–æ–¥–∞—Ä—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º –ø–æ –ø–∏—Ç–∞–Ω–∏—é –∏ —Ä–µ–∂–∏–º—É –¥–Ω—è —Å–∏–º–ø—Ç–æ–º—ã —Å—Ç–∞–ª–∏ –≥–æ—Ä–∞–∑–¥–æ –ª–µ–≥—á–µ." },
  { name: "–î–∏–ª–Ω–æ–∑–∞", badge: "3 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–¢–æ—à–Ω–æ—Ç–∞", text: "–°–æ–≤–µ—Ç—ã Nora Plus –ø–æ–º–æ–≥–ª–∏ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —Ç–æ—à–Ω–æ—Ç–æ–π –∏ –ª–µ–≥—á–µ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å. –í—Å–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç –≤–æ–≤—Ä–µ–º—è." },
  { name: "–ï–ª–µ–Ω–∞", badge: "4 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–°–ª–∞–±–æ—Å—Ç—å –∏ —É—Å—Ç–∞–ª–æ—Å—Ç—å", text: "–¢–µ–ø–µ—Ä—å —è –∑–Ω–∞—é, –∫–∞–∫–∏–µ –≤–∏—Ç–∞–º–∏–Ω—ã –Ω—É–∂–Ω–æ –ø–∏—Ç—å, —Å–∫–æ–ª—å–∫–æ –æ—Ç–¥—ã—Ö–∞—Ç—å –∏ –∫–∞–∫ –≤—ã—Å—Ç—Ä–æ–∏—Ç—å –¥–µ–Ω—å. –ß—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ª—É—á—à–µ!" },
  { name: "–®–∞—Ö–Ω–æ–∑–∞", badge: "5 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–ü–ª–æ—Ö–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", text: "–ë–ª–∞–≥–æ–¥–∞—Ä—è –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–º —Å–ª–æ–≤–∞–º –∏ —Å–æ–≤–µ—Ç–∞–º Nora Plus –º–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∑–∞–º–µ—Ç–Ω–æ —É–ª—É—á—à–∏–ª–æ—Å—å." },
  { name: "–ò—Ä–∏–Ω–∞", badge: "5 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–¢—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å", text: "–°–æ–≤–µ—Ç—ã Nora Plus –ø–æ–º–æ–≥–ª–∏ –º–Ω–µ –±–æ–ª—å—à–µ –æ—Ç–¥—ã—Ö–∞—Ç—å, –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–µ–±–µ –∏ –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –ª–∏—à–Ω–∏—Ö –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏–π –∑–∞ –º–∞–ª—ã—à–∞." },
  { name: "–ú–∞—Ä–∏—è", badge: "7 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–ë–µ—Å—Å–æ–Ω–Ω–∏—Ü–∞", text: "–ë–ª–∞–≥–æ–¥–∞—Ä—è —Å–æ–≤–µ—Ç–∞–º Nora Plus —è —Å—Ç–∞–ª–∞ –ª—É—á—à–µ —Å–ø–∞—Ç—å –∏ —Å–ø–æ–∫–æ–π–Ω–æ –∂–¥—É –ø–æ—è–≤–ª–µ–Ω–∏—è –º–∞–ª—ã—à–∞." },
  { name: "–í–∏–∫—Ç–æ—Ä–∏—è", badge: "3 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–°—Ç—Ä–∞—Ö–∏", text: "Nora Plus –ø–æ–º–æ–≥–ª–∞ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —Ç—Ä–µ–≤–æ–≥–∞–º–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∞–ª–∞ —Å–æ–≤–µ—Ç–∞–º–∏, —Ç–µ–ø–µ—Ä—å —è —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è —É–≤–µ—Ä–µ–Ω–Ω–µ–µ." },
  { name: "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞", badge: "6 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–ü–∏—Ç–∞–Ω–∏–µ", text: "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –Ω–∞–ø–æ–º–Ω–∏–ª –æ –≤–∞–∂–Ω—ã—Ö –≤–∏—Ç–∞–º–∏–Ω–∞—Ö –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ, —Ç–µ–ø–µ—Ä—å –ø–∏—Ç–∞—é—Å—å –≥—Ä–∞–º–æ—Ç–Ω–æ –∏ —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è —ç–Ω–µ—Ä–≥–∏—á–Ω–æ–π." },
  { name: "–ì—É–ª—å–Ω–æ—Ä–∞", badge: "2 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–ù–∞—Ä—É—à–µ–Ω–∏–µ —Å–Ω–∞", text: "–ü—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞–≤—à–∏—Å—å —Å Nora, —è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∞ —Å–æ–Ω –∏ —Ç–µ–ø–µ—Ä—å —Ö–æ—Ä–æ—à–æ –≤—Å—Ç—Ä–µ—á–∞—é —É—Ç—Ä–æ." },
  { name: "–ú–∞–ª–∏–∫–∞", badge: "8 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–†–∞–∑–¥—Ä–∞–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", text: "–í–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏ —Å—Ç–∞–ª–∞ –Ω–µ—Ä–≤–Ω–æ–π, –Ω–æ —Å–æ–≤–µ—Ç—ã –æ—Ç Nora –ø–æ–º–æ–≥–ª–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —É–ª—É—á—à–∏–ª–æ—Å—å." },
  { name: "–õ–æ–ª–∞", badge: "4 –º–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", problem: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –±–µ–ª–∫–∞", text: "–°–æ–≤–µ—Ç—ã –ø–æ –ø–∏—Ç–∞–Ω–∏—é –æ—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω—ã–µ, —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –±–æ–ª—å—à–µ —ç–Ω–µ—Ä–≥–∏–∏." }
];

// SVG —Ö–≤–æ—Å—Ç–∏–∫ –¥–ª—è –ø—Ä–∞–≤–æ–≥–æ –ø—É–∑—ã—Ä—è (–≤–æ–ø—Ä–æ—Å)
const BubbleTailRight = () => (
  <svg viewBox="0 0 14 28" width="15" height="30" style={{position:'absolute', right:-14, bottom:0}}>
    <path d="M0 28 Q9 10 14 0 V28 Z" fill="#fff"/>
  </svg>
);

// SVG —Ö–≤–æ—Å—Ç–∏–∫ –¥–ª—è –ª–µ–≤–æ–≥–æ –ø—É–∑—ã—Ä—è (–æ—Ç–≤–µ—Ç)
const BubbleTailLeft = () => (
  <svg viewBox="0 0 14 28" width="15" height="30" style={{position:'absolute', left:-14, bottom:0}}>
    <path d="M14 28 Q5 10 0 0 V28 Z" fill="#fff"/>
  </svg>
);

// --- –ë–ª–æ–∫ "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ù–æ—Ä–∞?" —Å typing —ç—Ñ—Ñ–µ–∫—Ç–æ–º, –æ—Ç—Å—Ç—É–ø–æ–º, —Ö–≤–æ—Å—Ç–∏–∫–∞–º–∏ ---
const NoraHowItWorksBlock = () => {
  const DIALOGS = [
    {
      q: "–ü–æ—á–µ–º—É –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Ç—Ä–µ–≤–æ–∂—É—Å—å –∑–∞ –º–∞–ª—ã—à–∞?",
      a: "–≠—Ç–æ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ! –Ø –ø–æ–º–æ–≥—É –æ—Ç–ª–∏—á–∏—Ç—å ¬´–Ω–æ—Ä–º–∞–ª—å–Ω—ã–µ¬ª —Ç—Ä–µ–≤–æ–≥–∏ –æ—Ç –æ–ø–∞—Å–Ω—ã—Ö, –¥–∞–º —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —É—Å–ø–æ–∫–æ–µ–Ω–∏—è –∏ –ø–æ–¥—Å–∫–∞–∂—É, –∫–æ–≥–¥–∞ —Å—Ç–æ–∏—Ç –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –≤—Ä–∞—á—É."
    },
    {
      q: "–ü—Ä–æ—Å—ã–ø–∞—é—Å—å –ø–æ –Ω–æ—á–∞–º –∏ –Ω–µ –º–æ–≥—É —É—Å–Ω—É—Ç—å...",
      a: "–ù–∞—Ä—É—à–µ–Ω–∏–µ —Å–Ω–∞ ‚Äî —á–∞—Å—Ç–∞—è –ø—Ä–æ–±–ª–µ–º–∞! –Ø —Å–æ–±–µ—Ä—É –≤–∞—à–∏ —Å–∏–º–ø—Ç–æ–º—ã –∏ –ø–æ–¥—Å–∫–∞–∂—É, –∫–∞–∫–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏ –ø–æ–º–æ–≥—É—Ç –ª—É—á—à–µ –∑–∞—Å—ã–ø–∞—Ç—å –∏ —á—Ç–æ –≤–∞–∂–Ω–æ –æ–±—Å—É–¥–∏—Ç—å —Å –≤—Ä–∞—á–æ–º."
    },
    {
      q: "–ë–æ–ª—è—Ç —Å–ø–∏–Ω–∞ –∏ –Ω–æ–≥–∏, –∫–∞–∫ –æ–±–ª–µ–≥—á–∏—Ç—å –±–æ–ª—å?",
      a: "–Ø –¥–∞–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑–≥—Ä—É–∑–∫–µ, —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º, –ø–æ–¥—Å–∫–∞–∂—É, –∫–æ–≥–¥–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –¥–æ–∫—Ç–æ—Ä—É –∏ –ø–æ–º–æ–≥—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Å–∏–º–ø—Ç–æ–º—ã."
    },
    {
      q: "–ö–∞–∫–∏–µ –≤–∏—Ç–∞–º–∏–Ω—ã –∏ –∞–Ω–∞–ª–∏–∑—ã –Ω—É–∂–Ω—ã?",
      a: "–ü–æ–¥—Å–∫–∞–∂—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫, –≥—Ä–∞—Ñ–∏–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∏ –æ–±—ä—è—Å–Ω—é, –∑–∞—á–µ–º –∫–∞–∂–¥—ã–π –∞–Ω–∞–ª–∏–∑ ‚Äî –≤—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ –≤–∞–∂–Ω–æ–µ!"
    }
  ];
  const [step, setStep] = useState(0);
  const [phase, setPhase] = useState("typeQ"); // typeQ, typeA, waitNext
  const [qText, setQText] = useState("");
  const [aText, setAText] = useState("");

  useEffect(() => {
    if (phase === "typeQ") {
      setQText("");
      let i = 0;
      const interval = setInterval(() => {
        setQText(DIALOGS[step].q.slice(0, i+1));
        i++;
        if (i > DIALOGS[step].q.length) {
          clearInterval(interval);
          setTimeout(() => setPhase("typeA"), 300);
        }
      }, 34);
      return () => clearInterval(interval);
    }
    if (phase === "typeA") {
      setAText("");
      let i = 0;
      const interval = setInterval(() => {
        setAText(DIALOGS[step].a.slice(0, i+1));
        i++;
        if (i > DIALOGS[step].a.length) {
          clearInterval(interval);
          setTimeout(() => setPhase("waitNext"), 5000);
        }
      }, 16);
      return () => clearInterval(interval);
    }
    if (phase === "waitNext" && step < DIALOGS.length-1) {
      const timer = setTimeout(() => {
        setQText("");
        setAText("");
        setPhase("typeQ");
        setStep(s => s+1);
      }, 200);
      return () => clearTimeout(timer);
    }
  }, [phase, step]);

  return (
    <div style={{
      width: `calc(100% - ${BLOCK_SIDE_PADDING * 2}px)`,
      maxWidth,
      margin: "0 auto 38px auto",
      background: GRADIENT,
      borderRadius: borderRadius,
      boxShadow: "0 6px 20px 0 rgba(150,175,205,0.11)",
      padding: `22px ${BLOCK_SIDE_PADDING}px`,
      fontFamily: "'Manrope', Arial, Helvetica, sans-serif",
      minHeight: 190,
    }}>
      <div style={{
        fontWeight: 700, fontSize: 20, color: NORA_COLOR, textAlign: "center"
      }}>
        –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Nora?
      </div>
      <div style={{height: 20}} />
      <div style={{
        width: "100%", minHeight: 90, display: "flex", flexDirection: "column",
        alignItems: "flex-end", justifyContent: "center"
      }}>
        {qText && (
          <div style={{
            position: "relative", alignSelf: "flex-end",
            background: "#fff", color: NORA_COLOR,
            borderRadius: 19, fontSize: 15, fontWeight: 500,
            boxShadow: "0 1px 8px 0 rgba(200,180,200,0.12)",
            padding: "12px 18px", marginBottom: 8, maxWidth: 340,
          }}>
            {qText}<span style={{opacity:0.19}}>{phase==="typeQ"&&"|"}</span>
            <BubbleTailRight />
          </div>
        )}
        {aText && (
          <div style={{
            position: "relative", alignSelf: "flex-start",
            background: "#fff", color: NORA_COLOR,
            borderRadius: 19, fontSize: 15, fontWeight: 400,
            padding: "12px 18px", minHeight: 26,
            boxShadow: "0 1px 8px 0 rgba(200,180,200,0.09)",
            maxWidth: 340, letterSpacing: "0.015em"
          }}>
            {aText}<span style={{opacity:0.19}}>{phase==="typeA"&&"|"}</span>
            <BubbleTailLeft />
          </div>
        )}
      </div>
      <div style={{fontSize: 13, color: "#6e7c85", textAlign: "center", marginTop: 8}}>
        –ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å ‚Äî –ù–æ—Ä–∞ –Ω–∞–π–¥—ë—Ç –æ—Ç–≤–µ—Ç!
      </div>
    </div>
  );
};

// --- WhyNoraBlock/ReviewBlock/Footer/FooterGap ‚Äî —Å–∫–æ–ø–∏—Ä—É–π –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ –ø–æ–ª–Ω–æ–≥–æ –∫–æ–¥–∞ ---

// ---- –ü–∞–Ω–µ–ª—å ----
const HeaderPanel = () => (
  <div style={{
    width: `calc(100% - ${PANEL_SIDE_PADDING * 2}px)`,
    maxWidth,
    minHeight: panelHeight,
    background: GRADIENT,
    color: NORA_COLOR,
    margin: "20px auto 0 auto",
    display: "flex",
    alignItems: "center",
    justifyContent: "space-between",
    borderRadius: borderRadius,
    paddingLeft: PANEL_SIDE_PADDING, paddingRight: PANEL_SIDE_PADDING, paddingTop: 5, paddingBottom: 5,
    boxSizing: "border-box", zIndex: 1,
    fontFamily: "'Manrope', Arial, Helvetica, sans-serif"
  }}>
    <div style={{ display: "flex", flexDirection: "column", alignItems: "flex-start", flex: 1, paddingLeft: 5 }}>
      <span style={{
        fontWeight: 800, fontSize: "19px", lineHeight: 1.06, whiteSpace: "nowrap", marginBottom: 7
      }}>
        Nora Plus
      </span>
      <span style={{
        fontWeight: 400, fontSize: "13px", color: "#565656", lineHeight: 1.04, whiteSpace: "nowrap"
      }}>
        –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –±—É–¥—É—â–∏—Ö –º–∞–º
      </span>
    </div>
    <div style={{ display: "flex", alignItems: "center", gap: 8, marginLeft: 16 }}>
      <button style={{
        background: "transparent", border: "none", cursor: "pointer",
        width: 38, height: 38, borderRadius: 19,
        display: "flex", alignItems: "center", justifyContent: "center"
      }}>
        <img src={ICONS.share} alt="Share"
          style={{ width: ICON_SIZE, height: ICON_SIZE, filter: filterNora }} />
      </button>
      <button style={{
        background: "transparent", border: "none", cursor: "pointer",
        width: 38, height: 38, borderRadius: 19,
        display: "flex", alignItems: "center", justifyContent: "center"
      }}>
        <img src={ICONS.telegram} alt="Telegram"
          style={{ width: ICON_SIZE, height: ICON_SIZE, filter: filterNora }} />
      </button>
      <button style={{
        background: "transparent", border: "none", cursor: "pointer",
        width: 38, height: 38, borderRadius: 19,
        display: "flex", alignItems: "center", justifyContent: "center"
      }}>
        <img src={ICONS.trash} alt="Trash"
          style={{ width: ICON_SIZE, height: ICON_SIZE, filter: filterNora }} />
      </button>
    </div>
  </div>
);

// ---- –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç ----
const Chat = () => {
  const [showWelcome, setShowWelcome] = useState(true);

  // ... –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ —á–∞—Ç–∞ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ –≤—ã—à–µ ...

  if (showWelcome) {
    return (
      <div style={{
        fontFamily: "'Manrope', Arial, Helvetica, sans-serif",
        background: "#f8fdff",
        width: "100vw",
        minHeight: "100vh"
      }}>
        <HeaderPanel />
        <div style={{ height: 20 }} />
        <div style={{ height: 20 }} />

        <div
          style={{
            width: "100%",
            maxWidth: maxWidth,
            margin: "0 auto",
            display: "flex",
            justifyContent: "center",
            alignItems: "center"
          }}
        >
          <video
            src="/nora.mp4"
            style={{
              width: "100%",
              maxWidth: videoMaxWidth,
              display: "block",
              borderRadius: 24
            }}
            autoPlay
            playsInline
            muted
            loop
            preload="auto"
          />
        </div>
        <div style={{ height: 20 }} />
        <div style={{ height: 20 }} />

        <div style={{
          width: `calc(100% - ${BLOCK_SIDE_PADDING * 2}px)`,
          maxWidth,
          textAlign: "center",
          margin: "0 auto"
        }}>
          <div style={{
            fontWeight: 700, fontSize: "22px", color: NORA_COLOR, marginBottom: 14
          }}>–ñ–¥—ë—Ç–µ –º–∞–ª—ã—à–∞? –Ø –ø–æ–º–æ–≥—É!</div>
          <div style={{
            fontWeight: 400, fontSize: "15px", margin: "0 auto 0 auto", maxWidth: 400,
            padding: "0 18px",
            lineHeight: 1.75, color: NORA_COLOR, display: "inline-block"
          }}>
            –Ø –ø–æ–º–æ–≥–∞—é –±—É–¥—É—â–∏–º –º–∞–º–∞–º: –æ—Ç–≤–µ—á–∞—é –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–æ–º–∏–Ω–∞—é –æ –≤–∞–∂–Ω—ã—Ö –¥–µ–ª–∞—Ö, —Å–ª–µ–∂—É –∑–∞ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ–º.
          </div>
          <div style={{ height: 40 }} />
          <div style={{ display: "flex", justifyContent: "center", width: "100%" }}>
            <div style={{ width: "100%", textAlign: "center" }}>
              <button
                style={{
                  width: "100%", maxWidth: 290,
                  background: BABY_GRADIENT,
                  color: "#fff",
                  border: "none",
                  borderRadius: borderRadius,
                  fontWeight: 700,
                  fontSize: "17px",
                  padding: "15px 0",
                  margin: "0 auto",
                  cursor: "pointer",
                  display: "flex", alignItems: "center", justifyContent: "center",
                  boxShadow: "0 2px 18px 0 rgba(200, 128, 140, 0.09)"
                }}
                onClick={() => setShowWelcome(false)}
              >
                –ù–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è&nbsp;
                <span style={{ marginLeft: 8, display: "flex", alignItems: "center" }}>{ICONS.arrowRight}</span>
              </button>
              <div style={{ height: 13 }} />
              <div style={{ fontSize: 13, color: "#7c8792" }}>
                –ü–æ–ø—Ä–æ–±—É–π—Ç–µ ‚Äî —ç—Ç–æ –±—ã—Å—Ç—Ä–æ –∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ
              </div>
            </div>
          </div>
          <div style={{ height: 40 }} />
          <NoraHowItWorksBlock />
          {/* –≤—Å—Ç–∞–≤—å –Ω–∏–∂–µ —Å–≤–æ–∏ WhyNoraBlock, ReviewBlock, Footer, FooterGap */}
        </div>
      </div>
    );
  }

  // ---- —á–∞—Ç –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è "–Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è" ----
  // –≤—Å—Ç–∞–≤—å —Å—é–¥–∞ –ø–∞–Ω–µ–ª—å, —á–∞—Ç-–∏—Å—Ç–æ—Ä–∏—é –∏ input –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Ç–≤–æ–µ–π –ø—Ä–æ—à–ª–æ–π –≤–µ—Ä—Å–∏–∏

  return (
    <div>
      <HeaderPanel />
      {/* ...–∫–æ–¥ —Ç–≤–æ–µ–≥–æ —á–∞—Ç–∞ –∏ —Ñ—É—Ç–µ—Ä—ã... */}
    </div>
  );
};

export default Chat;
