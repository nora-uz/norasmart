"use client";

import React, { useState } from "react";

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –º–∞–ª—ã—à–∞
const BABY_IMG = "/1000004249-removebg-preview-1.jpg";

// –û–ø–∏—Å–∞–Ω–∏—è –ø–æ –º–µ—Å—è—Ü–∞–º
const BABY_DESCRIPTIONS = [
  "–°–µ–π—á–∞—Å –º–∞–ª—ã—à –ø–æ—Ö–æ–∂ –Ω–∞ –º–∞–ª–µ–Ω—å–∫–æ–µ –∑–µ—Ä–Ω—ã—à–∫–æ, –Ω–æ —Å –∫–∞–∂–¥—ã–º –¥–Ω—ë–º –±—ã—Å—Ç—Ä–æ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è.",
  "–ú–∞–ª—ã—à –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞—Å—Ç—ë—Ç, —Ñ–æ—Ä–º–∏—Ä—É—é—Ç—Å—è –æ—Å–Ω–æ–≤–Ω—ã–µ –æ—Ä–≥–∞–Ω—ã.",
  "–í—ã –∑–∞–º–µ—Ç–∏—Ç–µ –ø–µ—Ä–≤—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è, —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è –Ω–µ—Ä–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞.",
  "–§–æ—Ä–º–∏—Ä—É—é—Ç—Å—è —á–µ—Ä—Ç—ã –ª–∏—Ü–∞, –º–∞–ª—ã—à –º–æ–∂–µ—Ç —à–µ–≤–µ–ª–∏—Ç—å—Å—è.",
  "–ù–∞—á–∏–Ω–∞–µ—Ç —Å–ª—ã—à–∞—Ç—å –∑–≤—É–∫–∏, –∫–æ–∂–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø–ª–æ—Ç–Ω–µ–µ.",
  "–ú–∞–ª—ã—à —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Å–≤–µ—Ç –∏ –∑–≤—É–∫, —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è –º–æ–∑–≥.",
  "–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –≤–µ—Å –∏ —Ä–æ—Å—Ç, –æ–±—Ä–∞–∑—É—é—Ç—Å—è —Ä–µ—Ñ–ª–µ–∫—Å—ã.",
  "–í—Å–µ –æ—Ä–≥–∞–Ω—ã —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω—ã, –º–∞–ª—ã—à –∞–∫—Ç–∏–≤–Ω–æ –¥–≤–∏–≥–∞–µ—Ç—Å—è.",
  "–ì–æ—Ç–æ–≤–∏—Ç—Å—è –∫ —Ä–æ–∂–¥–µ–Ω–∏—é, –∑–∞–Ω–∏–º–∞–µ—Ç –∫–æ–Ω–µ—á–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ."
];

// –¢–µ–º—ã –¥–ª—è 3-–≥–æ —ç—Ç–∞–ø–∞
const THEMES = [
  { title: "–ó–¥–æ—Ä–æ–≤—å–µ", icon: "üíâ" },
  { title: "–ü–∏—Ç–∞–Ω–∏–µ", icon: "üçé" },
  { title: "–î–µ–ø—Ä–µ—Å—Å–∏—è", icon: "üòä" },
  { title: "–£—Å—Ç–∞–ª–æ—Å—Ç—å", icon: "üò¥" }
];

const weights = [46, 47, 48];
const heights = [154, 155, 156];

export default function NoraDesign() {
  const [step, setStep] = useState(0);

  // –î–∞–Ω–Ω—ã–µ –∞–Ω–∫–µ—Ç—ã
  const [month, setMonth] = useState<number>(5);
  const [weight, setWeight] = useState<number>(47);
  const [height, setHeight] = useState<number>(155);

  // –î–ª—è —á–∞—Ç–∞
  const [userMsg, setUserMsg] = useState("");
  const [selectedTheme, setSelectedTheme] = useState<string | null>("");

  // ----------- –≠–ö–†–ê–ù 1: Nora —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –æ —Å–µ–±–µ ---------------
  if (step === 0) {
    return (
      <div style={rootStyle}>
        {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ –∏ –ø–ª–∞—à–∫–∞ —Å–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ */}
        <div style={{ position: "relative", width: "100%", display: "flex", justifyContent: "center" }}>
          <img
            src={BABY_IMG}
            alt="–†–µ–±–µ–Ω–æ–∫"
            style={{ width: 300, height: 300, objectFit: "contain", display: "block", marginTop: 40 }}
          />
          {/* –ü–ª–∞—à–∫–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Å–≤–µ—Ä—Ö—É */}
          <div style={{
            position: "absolute", top: 16, left: "50%", transform: "translateX(-50%)",
            background: "#F3A3A3", color: "#fff", borderRadius: 27, padding: "24px 30px",
            fontSize: 24, fontWeight: 500, boxSizing: "border-box", textAlign: "center", maxWidth: 390
          }}>
            {BABY_DESCRIPTIONS[month - 1]}
          </div>
          {/* –ü–ª–∞—à–∫–∞ —Å –º–µ—Å—è—Ü–µ–º —Å–ø—Ä–∞–≤–∞ –≤–Ω–∏–∑—É */}
          <div style={{
            position: "absolute", right: 10, bottom: 40,
            background: "#F3A3A3", color: "#fff", padding: "12px 28px",
            borderRadius: 25, fontSize: 22, fontWeight: 700, minWidth: 130, textAlign: "center"
          }}>
            –í–∞—à —Å—Ä–æ–∫<br /> –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏ <span style={{ fontSize: 34 }}>{month}</span>
          </div>
        </div>
        {/* –ö–Ω–æ–ø–∫–∞ "–¥–∞–ª–µ–µ" */}
        <div style={{ textAlign: "center", marginTop: 330 }}>
          <button
            style={mainBtn}
            onClick={() => setStep(1)}
          >–î–∞–ª–µ–µ</button>
        </div>
      </div>
    );
  }

  // ----------- –≠–ö–†–ê–ù 2: –ê–Ω–∫–µ—Ç–∞ ‚Äî —Å—Ä–æ–∫, –≤–µ—Å, —Ä–æ—Å—Ç ---------------
  if (step === 1) {
    return (
      <div style={rootStyle}>
        <div style={{ width: "100%", display: "flex", flexDirection: "column", alignItems: "center", marginTop: 40 }}>
          <img src={BABY_IMG} alt="–†–µ–±–µ–Ω–æ–∫" style={{ width: 300, height: 300, objectFit: "contain", display: "block" }} />
        </div>
        <div style={{ textAlign: "center", fontWeight: 700, fontSize: 28, margin: "44px 0 28px 0" }}>
          –ó–∞–ø–æ–ª–Ω–∏—Ç–µ, –¥–ª—è —Ç–æ—á–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤.
        </div>
        <div style={{
          display: "flex", gap: 34, justifyContent: "center", marginBottom: 38, flexWrap: "wrap"
        }}>
          {/* –ú–µ—Å—è—Ü –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏ */}
          <div style={bigCard}>
            <div style={{ fontSize: 19, marginBottom: 9 }}>–°—Ä–æ–∫ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏:</div>
            <div style={{ display: "flex", gap: 8, justifyContent: "center" }}>
              {[4, 5, 6].map(m => (
                <div
                  key={m}
                  style={{
                    ...choiceBtn,
                    background: month === m ? "#F3A3A3" : "#fff",
                    color: month === m ? "#fff" : "#222"
                  }}
                  onClick={() => setMonth(m)}
                >{m}</div>
              ))}
            </div>
          </div>
          {/* –í–µ—Å */}
          <div style={bigCard}>
            <div style={{ fontSize: 19, marginBottom: 9 }}>–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–µ—Å:</div>
            <div style={{ display: "flex", gap: 8, justifyContent: "center" }}>
              {weights.map(w => (
                <div
                  key={w}
                  style={{
                    ...choiceBtn,
                    background: weight === w ? "#F7F8F8" : "#fff",
                    color: "#222"
                  }}
                  onClick={() => setWeight(w)}
                >{w}</div>
              ))}
            </div>
          </div>
          {/* –†–æ—Å—Ç */}
          <div style={bigCard}>
            <div style={{ fontSize: 19, marginBottom: 9 }}>–£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç:</div>
            <div style={{ display: "flex", gap: 8, justifyContent: "center" }}>
              {heights.map(h => (
                <div
                  key={h}
                  style={{
                    ...choiceBtn,
                    background: height === h ? "#F7F8F8" : "#fff",
                    color: "#222"
                  }}
                  onClick={() => setHeight(h)}
                >{h}</div>
              ))}
            </div>
          </div>
        </div>
        <div style={{ textAlign: "center", marginTop: 34 }}>
          <button style={mainBtn} onClick={() => setStep(2)}>–î–∞–ª–µ–µ</button>
        </div>
        <div style={{ textAlign: "center", marginTop: 12 }}>
          <button
            style={{ ...mainBtn, background: "#ECECEC", color: "#333" }}
            onClick={() => setStep(0)}
          >–ù–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É</button>
        </div>
      </div>
    );
  }

  // ----------- –≠–ö–†–ê–ù 3: –ß–∞—Ç, —Ç–µ–º—ã, –ø–æ–ª–µ –≤–≤–æ–¥–∞ ---------------
  if (step === 2) {
    return (
      <div style={rootStyle}>
        <div style={{ position: "relative", width: "100%", display: "flex", justifyContent: "center", height: 320, marginBottom: 14 }}>
          <img
            src={BABY_IMG}
            alt="–†–µ–±–µ–Ω–æ–∫"
            style={{ width: 300, height: 300, objectFit: "contain", display: "block", marginTop: 40 }}
          />
          {/* –ü–ª–∞—à–∫–∞ —Å –∫—Ä–∞—Ç–∫–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ–º —Å–≤–µ—Ä—Ö—É */}
          <div style={{
            position: "absolute", top: 16, left: "50%", transform: "translateX(-50%)",
            background: "#F3A3A3", color: "#fff", borderRadius: 27, padding: "24px 30px",
            fontSize: 22, fontWeight: 500, boxSizing: "border-box", textAlign: "center", maxWidth: 370
          }}>
            {BABY_DESCRIPTIONS[month - 1]}
          </div>
          {/* –ü–ª–∞—à–∫–∞ —Å–æ —Å—Ä–æ–∫–æ–º –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏ —Å–ø—Ä–∞–≤–∞ */}
          <div style={{
            position: "absolute", right: 10, bottom: 60,
            background: "#F3A3A3", color: "#fff", padding: "12px 28px",
            borderRadius: 25, fontSize: 22, fontWeight: 700, minWidth: 120, textAlign: "center"
          }}>
            –í–∞—à —Å—Ä–æ–∫<br /> –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏ <span style={{ fontSize: 32 }}>{month}</span>
          </div>
        </div>
        {/* –í–æ–ø—Ä–æ—Å: –ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ–±—Å—É–¥–∏—Ç—å? */}
        <div style={{
          textAlign: "center", fontWeight: 700, fontSize: 26, margin: "34px 0 38px 0"
        }}>
          –ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ–±—Å—É–¥–∏—Ç—å —Å–µ–≥–æ–¥–Ω—è?
        </div>
        {/* –ë–ª–æ–∫ —Ç–µ–º ‚Äì –∫–∞—Ä—Ç–æ—á–∫–∏ —á–µ—Ç—ã—Ä–µ –≤ –¥–≤–µ —Å—Ç—Ä–æ–∫–∏ */}
        <div style={{
          display: "flex", flexWrap: "wrap", gap: 22, justifyContent: "center", marginBottom: 30
        }}>
          {THEMES.map((t, idx) => (
            <div
              key={t.title}
              style={{
                background: "#F7F8FA",
                borderRadius: 19,
                boxShadow: selectedTheme === t.title ? "0 0 0 2px #F3A3A3 inset" : "none",
                padding: "24px 20px",
                minWidth: 180,
                maxWidth: 240,
                cursor: "pointer",
                fontWeight: 700,
                fontSize: 22,
                display: "flex",
                flexDirection: "column",
                alignItems: "center"
              }}
              onClick={() => setSelectedTheme(t.title)}
            >
              <span style={{ fontSize: 28, marginBottom: 8 }}>{t.icon}</span>
              <span>{t.title}</span>
              <span style={{ fontWeight: 400, fontSize: 15, marginTop: 5, textAlign: "center", color: "#666" }}>
                {BABY_DESCRIPTIONS[month - 1]}
              </span>
            </div>
          ))}
        </div>
        {/* –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –≤–æ–ø—Ä–æ—Å–∞ */}
        <div style={{
          display: "flex", alignItems: "center", maxWidth: 540, margin: "0 auto",
          padding: "14px 26px", background: "#F7F7FA", borderRadius: 23
        }}>
          <input
            style={{
              flex: 1, border: "none", fontSize: 26,
              background: "transparent", color: "#222", outline: "none"
            }}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å..."
            value={userMsg}
            onChange={e => setUserMsg(e.target.value)}
          />
          <button
            style={{
              border: "none", background: "none", color: "#F3A3A3",
              fontSize: 38, cursor: "pointer", marginLeft: 12
            }}
          >
            {/* –°—Ç–∏–ª–∏–∑—É–µ–º –≤ –≤–∏–¥–µ "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å" ‚Äî paper plane */}
            <span>‚úàÔ∏è</span>
          </button>
        </div>
      </div>
    );
  }

  return null;
}

// ------- –°—Ç–∏–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±–ª–∏–∑–∫–∏–µ –∫ –º–∞–∫–µ—Ç—É -------
const rootStyle = {
  background: "#F9FAFC",
  minHeight: "100vh",
  width: "100vw",
  position: "relative"
} as React.CSSProperties;

const mainBtn = {
  background: "linear-gradient(90deg,#F3A3A3,#F3A3A3)",
  color: "#fff",
  borderRadius: 23,
  height: 56,
  fontWeight: 600,
  fontSize: 22,
  border: "none",
  margin: "auto",
  display: "block",
  width: 340,
  cursor: "pointer"
};

const bigCard = {
  background: "#F7F8FA",
  borderRadius: 19,
  padding: "18px 24px",
  minWidth: 140,
  fontSize: 19,
  color: "#222",
  textAlign: "center",
  marginRight: 10,
  marginBottom: 12,
  boxShadow: "none"
} as React.CSSProperties;

const choiceBtn = {
  borderRadius: 11,
  padding: "10px 0",
  fontWeight: 700,
  fontSize: 36,
  minWidth: 54,
  textAlign: "center",
  margin: "0 4px",
  cursor: "pointer",
  transition: "background 0.18s, color 0.18s"
} as React.CSSProperties;

