"use client";
import React, { useState, useEffect, useRef } from "react";

const NORA_COLOR = "#2e2e2e";
const ICON_SIZE = 23;
const borderRadius = 22;
const panelHeight = 62;
const maxWidth = 560;
const videoMaxWidth = 314;
const GRADIENT = "linear-gradient(90deg, #eff5fe 0%, #e5e8ed 100%)";
const BABY_GRADIENT = "linear-gradient(90deg, #e39290 0%, #efb1b6 100%)";
const INPUT_BAR_HEIGHT = 68;
const PANEL_SIDE_PADDING = 15;
const BLOCK_SIDE_PADDING = 10;
const CARD_GAP = 10;

// –ò–∫–æ–Ω–∫–∏
const ICONS = {
  telegram: "https://cdn-icons-png.flaticon.com/512/1946/1946547.png",
  trash: "https://cdn-icons-png.flaticon.com/512/1345/1345823.png",
  share: "https://cdn-icons-png.flaticon.com/512/535/535285.png",
  arrowRight: (
    <svg width="22" height="22" viewBox="0 0 22 22" fill="none">
      <path d="M6 11H16M16 11L12 7M16 11L12 15"
        stroke="#fff" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
    </svg>
  ),
};

const filterNora =
  "invert(13%) sepia(4%) saturate(271%) hue-rotate(175deg) brightness(92%) contrast(93%)";
const BORDER_COLOR = "#e5e8ed";

// --- –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ù–æ—Ä–∞" ---
const HowItWorks = () => {
  const EXAMPLES = [
    { q: "–ú–æ–∂–Ω–æ –ª–∏ –ø–∏—Ç—å –∫–æ—Ñ–µ –≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏?", a: "‚òï –ö–æ–Ω–µ—á–Ω–æ, –Ω–æ –Ω–µ –±–æ–ª—å—à–µ 1‚Äì2 —á–∞—à–µ–∫ –≤ –¥–µ–Ω—å." },
    { q: "–Ø —á–∞—Å—Ç–æ –≤–æ–ª–Ω—É—é—Å—å –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã.", a: "ü§ó –≠—Ç–æ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ. –Ø –ø–æ–º–æ–≥—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, –∫–æ–≥–¥–∞ —Å—Ç–æ–∏—Ç –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –≤—Ä–∞—á—É." },
    { q: "–ë–æ–ª–∏—Ç —Å–ø–∏–Ω–∞ –∏ –ø–æ—è—Å–Ω–∏—Ü–∞.", a: "ü¶µ –°—Ç–∞—Ä–∞–π—Ç–µ—Å—å –±–æ–ª—å—à–µ –æ—Ç–¥—ã—Ö–∞—Ç—å –ª—ë–∂–∞ –Ω–∞ –±–æ–∫—É –∏ –≤—ã–±–∏—Ä–∞–π—Ç–µ —É–¥–æ–±–Ω—É—é –æ–±—É–≤—å." },
    { q: "–ü–ª–æ—Ö–æ —Å–ø–ª—é.", a: "üò¥ –ü—Ä–æ–≤–µ—Ç—Ä–∏–≤–∞–π—Ç–µ –∫–æ–º–Ω–∞—Ç—É, –¥–µ–ª–∞–π—Ç–µ —Å–ø–æ–∫–æ–π–Ω—ã–µ –ø—Ä–æ–≥—É–ª–∫–∏ ‚Äî –≤—Å—ë –Ω–∞–ª–∞–¥–∏—Ç—Å—è." },
    { q: "–ú–æ–∂–Ω–æ –ª–∏ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º?", a: "üèÉ –ö–æ–Ω–µ—á–Ω–æ. –†–µ–∫–æ–º–µ–Ω–¥—É—é –π–æ–≥—É, –ø–ª–∞–≤–∞–Ω–∏–µ –∏ –ø—Ä–æ–≥—É–ª–∫–∏, –±–µ–∑ –ø–µ—Ä–µ–≥—Ä—É–∑–æ–∫." }
  ];

  const [step, setStep] = useState(0);
  const [phase, setPhase] = useState("q");
  const [q, setQ] = useState("");
  const [a, setA] = useState("");

  useEffect(() => {
    if (phase === "q") {
      setQ("");
      let i = 0;
      const t = setInterval(() => {
        setQ(EXAMPLES[step].q.slice(0, i + 1));
        i++;
        if (i > EXAMPLES[step].q.length) {
          clearInterval(t);
          setTimeout(() => setPhase("a"), 300);
        }
      }, 40);
      return () => clearInterval(t);
    } else if (phase === "a") {
      setA("");
      let i = 0;
      const t = setInterval(() => {
        setA(EXAMPLES[step].a.slice(0, i + 1));
        i++;
        if (i > EXAMPLES[step].a.length) {
          clearInterval(t);
          setTimeout(() => setPhase("next"), 5000);
        }
      }, 25);
      return () => clearInterval(t);
    } else if (phase === "next") {
      const t = setTimeout(() => {
        setStep((s) => (s + 1) % EXAMPLES.length);
        setPhase("q");
      }, 300);
      return () => clearTimeout(t);
    }
  }, [phase, step]);

  const bubble = (text: string, side: "left" | "right") => (
    <div
      style={{
        alignSelf: side === "right" ? "flex-end" : "flex-start",
        background: "#fff",
        borderRadius: 19,
        padding: "15px 21px",
        marginBottom: 16,
        maxWidth: 370,
        textAlign: "left",
        boxShadow: "0 1px 8px rgba(200,180,200,0.1)"
      }}
    >
      {text}
    </div>
  );

  return (
    <div style={{
      width: `calc(100% - ${BLOCK_SIDE_PADDING * 2}px)`,
      maxWidth,
      margin: "0 auto 38px auto",
      background: GRADIENT,
      borderRadius: 22,
      boxShadow: "0 6px 20px 0 rgba(150,175,205,0.10)",
      boxSizing: "border-box",
      padding: "21px 0 20px 0",
      fontFamily: "'Manrope', Arial, Helvetica, sans-serif"
    }}>
      <div
        style={{
          fontWeight: 700,
          fontSize: "20px",
          color: NORA_COLOR,
          marginBottom: 20,
          textAlign: "center"
        }}
      >
        –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Nora?
      </div>
      <div style={{
        display: "flex",
        flexDirection: "column",
        padding: `0 ${BLOCK_SIDE_PADDING}px`
      }}>
        {q && bubble(q, "right")}
        {a && bubble(a, "left")}
      </div>
      <div style={{
        fontSize: 13,
        color: "#7b8590",
        textAlign: "center",
        marginTop: 8
      }}>
        –ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å ‚Äî –ù–æ—Ä–∞ –Ω–∞–π–¥—ë—Ç –æ—Ç–≤–µ—Ç!
      </div>
    </div>
  );
};

// --- –ü–æ—á–µ–º—É –ù–æ—Ä–∞ ---
const WhyNoraBlock = () => {
  const BENEFITS = [
    { emoji: "ü©∫", title: "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å", text: "–°–æ–≤–µ—Ç—ã –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö NHS –∏ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ–¥ –≤–∞—à —Ä–µ–≥–∏–æ–Ω." },
    { emoji: "ü§ù", title: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7", text: "–í—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤ –ª—é–±–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏." },
    { emoji: "‚è∞", title: "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", text: "–°–ª–µ–¥–∏–º, —á—Ç–æ–±—ã –≤—ã –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–±—ã–ª–∏: –∞–Ω–∞–ª–∏–∑—ã, –≤–∏—Ç–∞–º–∏–Ω—ã, –≤–∏–∑–∏—Ç—ã." },
    { emoji: "üîí", title: "–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å", text: "–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —É –≤–∞—Å." }
  ];
  return (
    <div
      style={{
        width: `calc(100% - ${BLOCK_SIDE_PADDING * 2}px)`,
        maxWidth,
        margin: "0 auto 38px auto",
        background: GRADIENT,
        borderRadius: borderRadius,
        boxShadow: "0 6px 20px rgba(150,175,205,0.10)",
        padding: "21px 0 20px 0"
      }}
    >
      <div
        style={{
          fontWeight: 700,
          fontSize: "20px",
          color: NORA_COLOR,
          marginBottom: 20,
          textAlign: "center"
        }}
      >
        –ü–æ—á–µ–º—É Nora Plus?
      </div>
      <div style={{
        display: "flex",
        flexDirection: "column",
        gap: CARD_GAP,
        padding: `0 ${BLOCK_SIDE_PADDING}px`
      }}>
        {BENEFITS.map(({ emoji, title, text }, i) => (
          <div key={i} style={{
            background: "#fff",
            borderRadius: 18,
            boxShadow: "0 2px 18px rgba(150,180,220,0.07)",
            padding: "19px 15px"
          }}>
            <div style={{ fontWeight: 700, fontSize: 16, color: NORA_COLOR, marginBottom: 5 }}>{emoji} {title}</div>
            <div style={{ fontSize: 13, color: "#3a3a3a" }}>{text}</div>
          </div>
        ))}
      </div>
    </div>
  );
};

// --- –û—Ç–∑—ã–≤—ã ---
const ReviewBlock = () => {
  const REVIEWS = [
    { name: "–ê–Ω–Ω–∞", text: "Nora Plus –ø–æ–¥—Å–∫–∞–∑–∞–ª–∞, –∫–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —É—Ç—Ä–µ–Ω–Ω–µ–π —Ç–æ—à–Ω–æ—Ç–æ–π." },
    { name: "–ú–∞—Ä–∏—è", text: "–°–æ–≤–µ—Ç—ã –ø–æ–º–æ–≥–ª–∏ –Ω–∞–ª–∞–¥–∏—Ç—å —Å–æ–Ω –∏ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ." },
    { name: "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞", text: "–¢–µ–ø–µ—Ä—å —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è —É–≤–µ—Ä–µ–Ω–Ω–µ–µ –∏ —Å–ø–æ–∫–æ–π–Ω–µ–µ." }
  ];
  return (
    <div
      style={{
        width: `calc(100% - ${BLOCK_SIDE_PADDING * 2}px)`,
        maxWidth,
        margin: "0 auto 38px auto",
        background: GRADIENT,
        borderRadius: 22,
        boxShadow: "0 6px 20px rgba(150,175,205,0.10)",
        padding: "21px 0 20px 0"
      }}
    >
      <div style={{
        fontWeight: 700,
        fontSize: "20px",
        color: NORA_COLOR,
        marginBottom: 20,
        textAlign: "center"
      }}>–û—Ç–∑—ã–≤—ã –±—É–¥—É—â–∏—Ö –º–∞–º</div>
      <div style={{
        display: "flex",
        flexDirection: "column",
        gap: 10,
        padding: `0 ${BLOCK_SIDE_PADDING}px`
      }}>
        {REVIEWS.map(({ name, text }, i) => (
          <div key={i} style={{
            background: "#fff",
            borderRadius: 18,
            padding: "16px 15px",
            boxShadow: "0 2px 18px rgba(150,180,220,0.07)"
          }}>
            <div style={{ fontWeight: 700, color: NORA_COLOR }}>{name}</div>
            <div style={{ fontSize: 13, color: "#3a3a3a", marginTop: 5 }}>{text}</div>
          </div>
        ))}
      </div>
    </div>
  );
};

const Footer = () => (
  <div
    style={{
      width: `calc(100% - 40px)`,
      maxWidth,
      margin: "0 auto",
      background: GRADIENT,
      borderRadius: "22px",
      boxShadow: "0 -4px 14px 0 rgba(155,175,205,0.06)",
      padding: 20,
      textAlign: "center",
      fontSize: 13,
      color: "#263540"
    }}
  >
    ¬© {new Date().getFullYear()} Nora Plus ‚Äî –∑–∞–±–æ—Ç–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –±—É–¥—É—â–∏—Ö –º–∞–º
  </div>
);

// --- –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç ---
const Chat = () => {
  const [showWelcome, setShowWelcome] = useState(true);
  if (showWelcome) {
    return (
      <div
        style={{
          fontFamily: "'Manrope', Arial, Helvetica, sans-serif",
          background: "#f8fdff",
          width: "100vw",
          minHeight: "100vh"
        }}
      >
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div style={{
          width: `calc(100% - ${PANEL_SIDE_PADDING * 2}px)`,
          maxWidth,
          minHeight: panelHeight,
          background: GRADIENT,
          color: NORA_COLOR,
          margin: "20px auto 0 auto",
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
          borderRadius: borderRadius,
          fontWeight: 700,
          fontSize: "19px"
        }}>
          Nora Plus
        </div>
        <div style={{ height: 40 }} />
        <div style={{
          textAlign: "center",
          fontWeight: 700,
          fontSize: "22px",
          color: NORA_COLOR,
          marginBottom: 10
        }}>–ñ–¥—ë—Ç–µ –º–∞–ª—ã—à–∞? –Ø –ø–æ–º–æ–≥—É!</div>
        <div style={{
          fontSize: "15px",
          color: NORA_COLOR,
          lineHeight: 1.6,
          maxWidth: 380,
          margin: "0 auto 40px auto",
          textAlign: "center"
        }}>
          –Ø –ø–æ–º–æ–≥–∞—é –±—É–¥—É—â–∏–º –º–∞–º–∞–º –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏: –æ—Ç–≤–µ—á–∞—é –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–æ–º–∏–Ω–∞—é –æ –≤–∞–∂–Ω—ã—Ö –¥–µ–ª–∞—Ö, —Å–ª–µ–∂—É –∑–∞ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ–º –∏ –¥–∞—é —Å–æ–≤–µ—Ç—ã, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ –º–µ–¥–∏—Ü–∏–Ω–µ –í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏–∏ NHS.
        </div>

        <div style={{ textAlign: "center", marginBottom: 40 }}>
          <button
            style={{
              background: BABY_GRADIENT,
              color: "white",
              border: "none",
              borderRadius: borderRadius,
              padding: "15px 50px",
              fontSize: "17px",
              fontWeight: 700,
              cursor: "pointer"
            }}
            onClick={() => setShowWelcome(false)}
          >
            –ù–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è
          </button>
        </div>

        {/* --- –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –±–ª–æ–∫–∏ --- */}
        <HowItWorks />
        <WhyNoraBlock />
        <ReviewBlock />
        <Footer />
      </div>
    );
  }
  return <div>–ß–∞—Ç-–∑–æ–Ω–∞</div>;
};

export default Chat;
